{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/maleal2/AAI-510.-Machine-Learning-_Group_5/blob/main/Developing%20a%20Machine%20Learning%20Model%20to%20Assist%20Home%20Credit%20Services%20in%20Loan%20Decisions%20for%20Unbanked%20Populations\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Importing dataset to Colab"
      ],
      "metadata": {
        "id": "Pl17PmkHBPoL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "1XG5wzYaairu",
        "outputId": "e6891f1b-fa9a-4c17-fd65-4f5e49b9b337",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Importing Basic Libraries"
      ],
      "metadata": {
        "id": "zZBErq9JeLbZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "2O0I2opieOxu"
      },
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Importing Data"
      ],
      "metadata": {
        "id": "VKjQNy-HelNk"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Checking train_data distribution"
      ],
      "metadata": {
        "id": "tN6_2rU0g8Zr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "train_data= pd.read_csv('/content/drive/MyDrive/AAI-510-Machine Learning/Group 5/Home Credit Default Risk Data/assignment/train_data.csv')\n",
        "print(train_data.shape)\n",
        "train_data.head()"
      ],
      "metadata": {
        "id": "EF90ph-red50",
        "outputId": "7088dd49-6bb7-4161-a55c-6584d4435180",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        }
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(153755, 122)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   SK_ID_CURR  TARGET NAME_CONTRACT_TYPE CODE_GENDER FLAG_OWN_CAR FLAG_OWN_REALTY  CNT_CHILDREN  \\\n",
              "0      410704       0         Cash loans           F            N               Y             1   \n",
              "1      381230       0         Cash loans           F            N               Y             1   \n",
              "2      450177       0         Cash loans           F            Y               Y             0   \n",
              "3      332445       0         Cash loans           M            Y               N             0   \n",
              "4      357429       0         Cash loans           F            Y               Y             0   \n",
              "\n",
              "   AMT_INCOME_TOTAL  AMT_CREDIT  AMT_ANNUITY  AMT_GOODS_PRICE NAME_TYPE_SUITE NAME_INCOME_TYPE  \\\n",
              "0          157500.0    900000.0      26446.5         900000.0   Unaccompanied          Working   \n",
              "1           90000.0    733176.0      21438.0         612000.0   Unaccompanied          Working   \n",
              "2          189000.0   1795500.0      62541.0        1795500.0   Unaccompanied        Pensioner   \n",
              "3          175500.0    494550.0      45490.5         450000.0   Unaccompanied        Pensioner   \n",
              "4          270000.0   1724688.0      54283.5        1575000.0          Family          Working   \n",
              "\n",
              "             NAME_EDUCATION_TYPE    NAME_FAMILY_STATUS  NAME_HOUSING_TYPE  \\\n",
              "0  Secondary / secondary special               Married  House / apartment   \n",
              "1               Higher education  Single / not married  House / apartment   \n",
              "2  Secondary / secondary special               Married  House / apartment   \n",
              "3               Higher education               Married  House / apartment   \n",
              "4               Higher education               Married  House / apartment   \n",
              "\n",
              "   REGION_POPULATION_RELATIVE  DAYS_BIRTH  DAYS_EMPLOYED  DAYS_REGISTRATION  DAYS_ID_PUBLISH  \\\n",
              "0                    0.010006      -16180          -2037            -3722.0            -3495   \n",
              "1                    0.031329      -14969           -162            -5502.0            -4442   \n",
              "2                    0.028663      -22213         365243           -12395.0            -4674   \n",
              "3                    0.004960      -19301         365243             -859.0            -2847   \n",
              "4                    0.018850      -18409           -886            -3835.0            -1958   \n",
              "\n",
              "   OWN_CAR_AGE  FLAG_MOBIL  FLAG_EMP_PHONE  FLAG_WORK_PHONE  FLAG_CONT_MOBILE  FLAG_PHONE  \\\n",
              "0          NaN           1               1                1                 1           1   \n",
              "1          NaN           1               1                1                 1           1   \n",
              "2          7.0           1               0                0                 1           0   \n",
              "3         22.0           1               0                0                 1           0   \n",
              "4          7.0           1               1                0                 1           0   \n",
              "\n",
              "   FLAG_EMAIL OCCUPATION_TYPE  CNT_FAM_MEMBERS  REGION_RATING_CLIENT  REGION_RATING_CLIENT_W_CITY  \\\n",
              "0           0             NaN              3.0                     2                            2   \n",
              "1           1     Accountants              2.0                     2                            2   \n",
              "2           0             NaN              2.0                     2                            2   \n",
              "3           0             NaN              2.0                     2                            2   \n",
              "4           0      Core staff              2.0                     2                            2   \n",
              "\n",
              "  WEEKDAY_APPR_PROCESS_START  HOUR_APPR_PROCESS_START  REG_REGION_NOT_LIVE_REGION  \\\n",
              "0                  WEDNESDAY                        8                           0   \n",
              "1                     FRIDAY                       11                           0   \n",
              "2                    TUESDAY                        9                           0   \n",
              "3                     MONDAY                       15                           0   \n",
              "4                   THURSDAY                       12                           0   \n",
              "\n",
              "   REG_REGION_NOT_WORK_REGION  LIVE_REGION_NOT_WORK_REGION  REG_CITY_NOT_LIVE_CITY  \\\n",
              "0                           0                            0                       0   \n",
              "1                           0                            0                       0   \n",
              "2                           0                            0                       0   \n",
              "3                           0                            0                       1   \n",
              "4                           0                            0                       0   \n",
              "\n",
              "   REG_CITY_NOT_WORK_CITY  LIVE_CITY_NOT_WORK_CITY       ORGANIZATION_TYPE  EXT_SOURCE_1  \\\n",
              "0                       0                        0  Business Entity Type 3           NaN   \n",
              "1                       1                        1                    Bank      0.697782   \n",
              "2                       0                        0                     XNA           NaN   \n",
              "3                       0                        0                     XNA           NaN   \n",
              "4                       0                        0           Self-employed           NaN   \n",
              "\n",
              "   EXT_SOURCE_2  EXT_SOURCE_3  APARTMENTS_AVG  BASEMENTAREA_AVG  YEARS_BEGINEXPLUATATION_AVG  \\\n",
              "0      0.397762      0.177704          0.0619            0.0611                       0.9856   \n",
              "1      0.696312      0.538863          0.0330               NaN                       0.9781   \n",
              "2      0.716972      0.355639             NaN               NaN                          NaN   \n",
              "3      0.662210      0.085033             NaN               NaN                          NaN   \n",
              "4      0.774506      0.627991          0.0577               NaN                       0.9806   \n",
              "\n",
              "   YEARS_BUILD_AVG  COMMONAREA_AVG  ELEVATORS_AVG  ENTRANCES_AVG  FLOORSMAX_AVG  FLOORSMIN_AVG  \\\n",
              "0           0.8028          0.0086            0.0         0.1379         0.1667         0.2083   \n",
              "1           0.7008             NaN            0.0         0.0345         0.0833            NaN   \n",
              "2              NaN             NaN            NaN            NaN            NaN            NaN   \n",
              "3              NaN             NaN            NaN            NaN            NaN            NaN   \n",
              "4           0.7348             NaN            NaN         0.1379         0.1667         0.2083   \n",
              "\n",
              "   LANDAREA_AVG  LIVINGAPARTMENTS_AVG  LIVINGAREA_AVG  NONLIVINGAPARTMENTS_AVG  NONLIVINGAREA_AVG  \\\n",
              "0        0.0299                0.0504          0.0519                      0.0              0.000   \n",
              "1        0.0251                   NaN          0.0166                      NaN              0.000   \n",
              "2           NaN                   NaN             NaN                      NaN                NaN   \n",
              "3           NaN                   NaN             NaN                      NaN                NaN   \n",
              "4        0.0418                   NaN          0.0544                      NaN              0.099   \n",
              "\n",
              "   APARTMENTS_MODE  BASEMENTAREA_MODE  YEARS_BEGINEXPLUATATION_MODE  YEARS_BUILD_MODE  \\\n",
              "0           0.0630             0.0634                        0.9856            0.8105   \n",
              "1           0.0336                NaN                        0.9782            0.7125   \n",
              "2              NaN                NaN                           NaN               NaN   \n",
              "3              NaN                NaN                           NaN               NaN   \n",
              "4           0.0588                NaN                        0.9806            0.7452   \n",
              "\n",
              "   COMMONAREA_MODE  ELEVATORS_MODE  ENTRANCES_MODE  FLOORSMAX_MODE  FLOORSMIN_MODE  LANDAREA_MODE  \\\n",
              "0           0.0086             0.0          0.1379          0.1667          0.2083         0.0306   \n",
              "1              NaN             0.0          0.0345          0.0833             NaN         0.0257   \n",
              "2              NaN             NaN             NaN             NaN             NaN            NaN   \n",
              "3              NaN             NaN             NaN             NaN             NaN            NaN   \n",
              "4              NaN             NaN          0.1379          0.1667          0.2083         0.0427   \n",
              "\n",
              "   LIVINGAPARTMENTS_MODE  LIVINGAREA_MODE  NONLIVINGAPARTMENTS_MODE  NONLIVINGAREA_MODE  \\\n",
              "0                 0.0551           0.0541                       0.0              0.0000   \n",
              "1                    NaN           0.0173                       NaN              0.0000   \n",
              "2                    NaN              NaN                       NaN                 NaN   \n",
              "3                    NaN              NaN                       NaN                 NaN   \n",
              "4                    NaN           0.0567                       NaN              0.1048   \n",
              "\n",
              "   APARTMENTS_MEDI  BASEMENTAREA_MEDI  YEARS_BEGINEXPLUATATION_MEDI  YEARS_BUILD_MEDI  \\\n",
              "0           0.0625             0.0611                        0.9856            0.8054   \n",
              "1           0.0333                NaN                        0.9781            0.7048   \n",
              "2              NaN                NaN                           NaN               NaN   \n",
              "3              NaN                NaN                           NaN               NaN   \n",
              "4           0.0583                NaN                        0.9806            0.7383   \n",
              "\n",
              "   COMMONAREA_MEDI  ELEVATORS_MEDI  ENTRANCES_MEDI  FLOORSMAX_MEDI  FLOORSMIN_MEDI  LANDAREA_MEDI  \\\n",
              "0           0.0086             0.0          0.1379          0.1667          0.2083         0.0305   \n",
              "1              NaN             0.0          0.0345          0.0833             NaN         0.0256   \n",
              "2              NaN             NaN             NaN             NaN             NaN            NaN   \n",
              "3              NaN             NaN             NaN             NaN             NaN            NaN   \n",
              "4              NaN             NaN          0.1379          0.1667          0.2083         0.0425   \n",
              "\n",
              "   LIVINGAPARTMENTS_MEDI  LIVINGAREA_MEDI  NONLIVINGAPARTMENTS_MEDI  NONLIVINGAREA_MEDI  \\\n",
              "0                 0.0513           0.0528                       0.0               0.000   \n",
              "1                    NaN           0.0169                       NaN               0.000   \n",
              "2                    NaN              NaN                       NaN                 NaN   \n",
              "3                    NaN              NaN                       NaN                 NaN   \n",
              "4                    NaN           0.0554                       NaN               0.101   \n",
              "\n",
              "  FONDKAPREMONT_MODE  HOUSETYPE_MODE  TOTALAREA_MODE WALLSMATERIAL_MODE EMERGENCYSTATE_MODE  \\\n",
              "0   reg oper account  block of flats          0.0408              Panel                  No   \n",
              "1   reg oper account  block of flats          0.0131             Wooden                  No   \n",
              "2                NaN             NaN             NaN                NaN                 NaN   \n",
              "3                NaN             NaN             NaN                NaN                 NaN   \n",
              "4                NaN  block of flats          0.0643       Stone, brick                  No   \n",
              "\n",
              "   OBS_30_CNT_SOCIAL_CIRCLE  DEF_30_CNT_SOCIAL_CIRCLE  OBS_60_CNT_SOCIAL_CIRCLE  \\\n",
              "0                       0.0                       0.0                       0.0   \n",
              "1                       7.0                       0.0                       7.0   \n",
              "2                       9.0                       0.0                       9.0   \n",
              "3                       0.0                       0.0                       0.0   \n",
              "4                       0.0                       0.0                       0.0   \n",
              "\n",
              "   DEF_60_CNT_SOCIAL_CIRCLE  DAYS_LAST_PHONE_CHANGE  FLAG_DOCUMENT_2  FLAG_DOCUMENT_3  \\\n",
              "0                       0.0                 -1755.0                0                1   \n",
              "1                       0.0                 -3268.0                0                1   \n",
              "2                       0.0                     0.0                0                1   \n",
              "3                       0.0                 -1971.0                0                0   \n",
              "4                       0.0                  -689.0                0                1   \n",
              "\n",
              "   FLAG_DOCUMENT_4  FLAG_DOCUMENT_5  FLAG_DOCUMENT_6  FLAG_DOCUMENT_7  FLAG_DOCUMENT_8  \\\n",
              "0                0                0                0                0                0   \n",
              "1                0                0                0                0                0   \n",
              "2                0                0                0                0                0   \n",
              "3                0                0                1                0                0   \n",
              "4                0                0                0                0                0   \n",
              "\n",
              "   FLAG_DOCUMENT_9  FLAG_DOCUMENT_10  FLAG_DOCUMENT_11  FLAG_DOCUMENT_12  FLAG_DOCUMENT_13  \\\n",
              "0                0                 0                 0                 0                 0   \n",
              "1                0                 0                 0                 0                 0   \n",
              "2                0                 0                 0                 0                 0   \n",
              "3                0                 0                 0                 0                 0   \n",
              "4                0                 0                 0                 0                 0   \n",
              "\n",
              "   FLAG_DOCUMENT_14  FLAG_DOCUMENT_15  FLAG_DOCUMENT_16  FLAG_DOCUMENT_17  FLAG_DOCUMENT_18  \\\n",
              "0                 0                 0                 0                 0                 0   \n",
              "1                 0                 0                 0                 0                 0   \n",
              "2                 0                 0                 0                 0                 0   \n",
              "3                 0                 0                 0                 0                 0   \n",
              "4                 0                 0                 0                 0                 0   \n",
              "\n",
              "   FLAG_DOCUMENT_19  FLAG_DOCUMENT_20  FLAG_DOCUMENT_21  AMT_REQ_CREDIT_BUREAU_HOUR  \\\n",
              "0                 0                 0                 0                         0.0   \n",
              "1                 0                 0                 0                         0.0   \n",
              "2                 0                 0                 0                         0.0   \n",
              "3                 0                 0                 0                         0.0   \n",
              "4                 0                 0                 0                         0.0   \n",
              "\n",
              "   AMT_REQ_CREDIT_BUREAU_DAY  AMT_REQ_CREDIT_BUREAU_WEEK  AMT_REQ_CREDIT_BUREAU_MON  \\\n",
              "0                        0.0                         0.0                        0.0   \n",
              "1                        0.0                         0.0                        0.0   \n",
              "2                        0.0                         0.0                        0.0   \n",
              "3                        0.0                         0.0                        0.0   \n",
              "4                        0.0                         0.0                        0.0   \n",
              "\n",
              "   AMT_REQ_CREDIT_BUREAU_QRT  AMT_REQ_CREDIT_BUREAU_YEAR  \n",
              "0                        0.0                         0.0  \n",
              "1                        2.0                         1.0  \n",
              "2                        0.0                         0.0  \n",
              "3                        0.0                         1.0  \n",
              "4                        0.0                         0.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b1a4c132-d891-42d0-a7c4-8556babdc23a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SK_ID_CURR</th>\n",
              "      <th>TARGET</th>\n",
              "      <th>NAME_CONTRACT_TYPE</th>\n",
              "      <th>CODE_GENDER</th>\n",
              "      <th>FLAG_OWN_CAR</th>\n",
              "      <th>FLAG_OWN_REALTY</th>\n",
              "      <th>CNT_CHILDREN</th>\n",
              "      <th>AMT_INCOME_TOTAL</th>\n",
              "      <th>AMT_CREDIT</th>\n",
              "      <th>AMT_ANNUITY</th>\n",
              "      <th>AMT_GOODS_PRICE</th>\n",
              "      <th>NAME_TYPE_SUITE</th>\n",
              "      <th>NAME_INCOME_TYPE</th>\n",
              "      <th>NAME_EDUCATION_TYPE</th>\n",
              "      <th>NAME_FAMILY_STATUS</th>\n",
              "      <th>NAME_HOUSING_TYPE</th>\n",
              "      <th>REGION_POPULATION_RELATIVE</th>\n",
              "      <th>DAYS_BIRTH</th>\n",
              "      <th>DAYS_EMPLOYED</th>\n",
              "      <th>DAYS_REGISTRATION</th>\n",
              "      <th>DAYS_ID_PUBLISH</th>\n",
              "      <th>OWN_CAR_AGE</th>\n",
              "      <th>FLAG_MOBIL</th>\n",
              "      <th>FLAG_EMP_PHONE</th>\n",
              "      <th>FLAG_WORK_PHONE</th>\n",
              "      <th>FLAG_CONT_MOBILE</th>\n",
              "      <th>FLAG_PHONE</th>\n",
              "      <th>FLAG_EMAIL</th>\n",
              "      <th>OCCUPATION_TYPE</th>\n",
              "      <th>CNT_FAM_MEMBERS</th>\n",
              "      <th>REGION_RATING_CLIENT</th>\n",
              "      <th>REGION_RATING_CLIENT_W_CITY</th>\n",
              "      <th>WEEKDAY_APPR_PROCESS_START</th>\n",
              "      <th>HOUR_APPR_PROCESS_START</th>\n",
              "      <th>REG_REGION_NOT_LIVE_REGION</th>\n",
              "      <th>REG_REGION_NOT_WORK_REGION</th>\n",
              "      <th>LIVE_REGION_NOT_WORK_REGION</th>\n",
              "      <th>REG_CITY_NOT_LIVE_CITY</th>\n",
              "      <th>REG_CITY_NOT_WORK_CITY</th>\n",
              "      <th>LIVE_CITY_NOT_WORK_CITY</th>\n",
              "      <th>ORGANIZATION_TYPE</th>\n",
              "      <th>EXT_SOURCE_1</th>\n",
              "      <th>EXT_SOURCE_2</th>\n",
              "      <th>EXT_SOURCE_3</th>\n",
              "      <th>APARTMENTS_AVG</th>\n",
              "      <th>BASEMENTAREA_AVG</th>\n",
              "      <th>YEARS_BEGINEXPLUATATION_AVG</th>\n",
              "      <th>YEARS_BUILD_AVG</th>\n",
              "      <th>COMMONAREA_AVG</th>\n",
              "      <th>ELEVATORS_AVG</th>\n",
              "      <th>ENTRANCES_AVG</th>\n",
              "      <th>FLOORSMAX_AVG</th>\n",
              "      <th>FLOORSMIN_AVG</th>\n",
              "      <th>LANDAREA_AVG</th>\n",
              "      <th>LIVINGAPARTMENTS_AVG</th>\n",
              "      <th>LIVINGAREA_AVG</th>\n",
              "      <th>NONLIVINGAPARTMENTS_AVG</th>\n",
              "      <th>NONLIVINGAREA_AVG</th>\n",
              "      <th>APARTMENTS_MODE</th>\n",
              "      <th>BASEMENTAREA_MODE</th>\n",
              "      <th>YEARS_BEGINEXPLUATATION_MODE</th>\n",
              "      <th>YEARS_BUILD_MODE</th>\n",
              "      <th>COMMONAREA_MODE</th>\n",
              "      <th>ELEVATORS_MODE</th>\n",
              "      <th>ENTRANCES_MODE</th>\n",
              "      <th>FLOORSMAX_MODE</th>\n",
              "      <th>FLOORSMIN_MODE</th>\n",
              "      <th>LANDAREA_MODE</th>\n",
              "      <th>LIVINGAPARTMENTS_MODE</th>\n",
              "      <th>LIVINGAREA_MODE</th>\n",
              "      <th>NONLIVINGAPARTMENTS_MODE</th>\n",
              "      <th>NONLIVINGAREA_MODE</th>\n",
              "      <th>APARTMENTS_MEDI</th>\n",
              "      <th>BASEMENTAREA_MEDI</th>\n",
              "      <th>YEARS_BEGINEXPLUATATION_MEDI</th>\n",
              "      <th>YEARS_BUILD_MEDI</th>\n",
              "      <th>COMMONAREA_MEDI</th>\n",
              "      <th>ELEVATORS_MEDI</th>\n",
              "      <th>ENTRANCES_MEDI</th>\n",
              "      <th>FLOORSMAX_MEDI</th>\n",
              "      <th>FLOORSMIN_MEDI</th>\n",
              "      <th>LANDAREA_MEDI</th>\n",
              "      <th>LIVINGAPARTMENTS_MEDI</th>\n",
              "      <th>LIVINGAREA_MEDI</th>\n",
              "      <th>NONLIVINGAPARTMENTS_MEDI</th>\n",
              "      <th>NONLIVINGAREA_MEDI</th>\n",
              "      <th>FONDKAPREMONT_MODE</th>\n",
              "      <th>HOUSETYPE_MODE</th>\n",
              "      <th>TOTALAREA_MODE</th>\n",
              "      <th>WALLSMATERIAL_MODE</th>\n",
              "      <th>EMERGENCYSTATE_MODE</th>\n",
              "      <th>OBS_30_CNT_SOCIAL_CIRCLE</th>\n",
              "      <th>DEF_30_CNT_SOCIAL_CIRCLE</th>\n",
              "      <th>OBS_60_CNT_SOCIAL_CIRCLE</th>\n",
              "      <th>DEF_60_CNT_SOCIAL_CIRCLE</th>\n",
              "      <th>DAYS_LAST_PHONE_CHANGE</th>\n",
              "      <th>FLAG_DOCUMENT_2</th>\n",
              "      <th>FLAG_DOCUMENT_3</th>\n",
              "      <th>FLAG_DOCUMENT_4</th>\n",
              "      <th>FLAG_DOCUMENT_5</th>\n",
              "      <th>FLAG_DOCUMENT_6</th>\n",
              "      <th>FLAG_DOCUMENT_7</th>\n",
              "      <th>FLAG_DOCUMENT_8</th>\n",
              "      <th>FLAG_DOCUMENT_9</th>\n",
              "      <th>FLAG_DOCUMENT_10</th>\n",
              "      <th>FLAG_DOCUMENT_11</th>\n",
              "      <th>FLAG_DOCUMENT_12</th>\n",
              "      <th>FLAG_DOCUMENT_13</th>\n",
              "      <th>FLAG_DOCUMENT_14</th>\n",
              "      <th>FLAG_DOCUMENT_15</th>\n",
              "      <th>FLAG_DOCUMENT_16</th>\n",
              "      <th>FLAG_DOCUMENT_17</th>\n",
              "      <th>FLAG_DOCUMENT_18</th>\n",
              "      <th>FLAG_DOCUMENT_19</th>\n",
              "      <th>FLAG_DOCUMENT_20</th>\n",
              "      <th>FLAG_DOCUMENT_21</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_HOUR</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_DAY</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_WEEK</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_MON</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_QRT</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_YEAR</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>410704</td>\n",
              "      <td>0</td>\n",
              "      <td>Cash loans</td>\n",
              "      <td>F</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "      <td>1</td>\n",
              "      <td>157500.0</td>\n",
              "      <td>900000.0</td>\n",
              "      <td>26446.5</td>\n",
              "      <td>900000.0</td>\n",
              "      <td>Unaccompanied</td>\n",
              "      <td>Working</td>\n",
              "      <td>Secondary / secondary special</td>\n",
              "      <td>Married</td>\n",
              "      <td>House / apartment</td>\n",
              "      <td>0.010006</td>\n",
              "      <td>-16180</td>\n",
              "      <td>-2037</td>\n",
              "      <td>-3722.0</td>\n",
              "      <td>-3495</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>WEDNESDAY</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Business Entity Type 3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.397762</td>\n",
              "      <td>0.177704</td>\n",
              "      <td>0.0619</td>\n",
              "      <td>0.0611</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8028</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0299</td>\n",
              "      <td>0.0504</td>\n",
              "      <td>0.0519</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.0630</td>\n",
              "      <td>0.0634</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8105</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0306</td>\n",
              "      <td>0.0551</td>\n",
              "      <td>0.0541</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0625</td>\n",
              "      <td>0.0611</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8054</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0305</td>\n",
              "      <td>0.0513</td>\n",
              "      <td>0.0528</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>reg oper account</td>\n",
              "      <td>block of flats</td>\n",
              "      <td>0.0408</td>\n",
              "      <td>Panel</td>\n",
              "      <td>No</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-1755.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>381230</td>\n",
              "      <td>0</td>\n",
              "      <td>Cash loans</td>\n",
              "      <td>F</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "      <td>1</td>\n",
              "      <td>90000.0</td>\n",
              "      <td>733176.0</td>\n",
              "      <td>21438.0</td>\n",
              "      <td>612000.0</td>\n",
              "      <td>Unaccompanied</td>\n",
              "      <td>Working</td>\n",
              "      <td>Higher education</td>\n",
              "      <td>Single / not married</td>\n",
              "      <td>House / apartment</td>\n",
              "      <td>0.031329</td>\n",
              "      <td>-14969</td>\n",
              "      <td>-162</td>\n",
              "      <td>-5502.0</td>\n",
              "      <td>-4442</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Accountants</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>FRIDAY</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Bank</td>\n",
              "      <td>0.697782</td>\n",
              "      <td>0.696312</td>\n",
              "      <td>0.538863</td>\n",
              "      <td>0.0330</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.9781</td>\n",
              "      <td>0.7008</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0345</td>\n",
              "      <td>0.0833</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0251</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0166</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.0336</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.9782</td>\n",
              "      <td>0.7125</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0345</td>\n",
              "      <td>0.0833</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0257</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0173</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0333</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.9781</td>\n",
              "      <td>0.7048</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0345</td>\n",
              "      <td>0.0833</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0256</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0169</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000</td>\n",
              "      <td>reg oper account</td>\n",
              "      <td>block of flats</td>\n",
              "      <td>0.0131</td>\n",
              "      <td>Wooden</td>\n",
              "      <td>No</td>\n",
              "      <td>7.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-3268.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>450177</td>\n",
              "      <td>0</td>\n",
              "      <td>Cash loans</td>\n",
              "      <td>F</td>\n",
              "      <td>Y</td>\n",
              "      <td>Y</td>\n",
              "      <td>0</td>\n",
              "      <td>189000.0</td>\n",
              "      <td>1795500.0</td>\n",
              "      <td>62541.0</td>\n",
              "      <td>1795500.0</td>\n",
              "      <td>Unaccompanied</td>\n",
              "      <td>Pensioner</td>\n",
              "      <td>Secondary / secondary special</td>\n",
              "      <td>Married</td>\n",
              "      <td>House / apartment</td>\n",
              "      <td>0.028663</td>\n",
              "      <td>-22213</td>\n",
              "      <td>365243</td>\n",
              "      <td>-12395.0</td>\n",
              "      <td>-4674</td>\n",
              "      <td>7.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>TUESDAY</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>XNA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.716972</td>\n",
              "      <td>0.355639</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>332445</td>\n",
              "      <td>0</td>\n",
              "      <td>Cash loans</td>\n",
              "      <td>M</td>\n",
              "      <td>Y</td>\n",
              "      <td>N</td>\n",
              "      <td>0</td>\n",
              "      <td>175500.0</td>\n",
              "      <td>494550.0</td>\n",
              "      <td>45490.5</td>\n",
              "      <td>450000.0</td>\n",
              "      <td>Unaccompanied</td>\n",
              "      <td>Pensioner</td>\n",
              "      <td>Higher education</td>\n",
              "      <td>Married</td>\n",
              "      <td>House / apartment</td>\n",
              "      <td>0.004960</td>\n",
              "      <td>-19301</td>\n",
              "      <td>365243</td>\n",
              "      <td>-859.0</td>\n",
              "      <td>-2847</td>\n",
              "      <td>22.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>MONDAY</td>\n",
              "      <td>15</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>XNA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.662210</td>\n",
              "      <td>0.085033</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-1971.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>357429</td>\n",
              "      <td>0</td>\n",
              "      <td>Cash loans</td>\n",
              "      <td>F</td>\n",
              "      <td>Y</td>\n",
              "      <td>Y</td>\n",
              "      <td>0</td>\n",
              "      <td>270000.0</td>\n",
              "      <td>1724688.0</td>\n",
              "      <td>54283.5</td>\n",
              "      <td>1575000.0</td>\n",
              "      <td>Family</td>\n",
              "      <td>Working</td>\n",
              "      <td>Higher education</td>\n",
              "      <td>Married</td>\n",
              "      <td>House / apartment</td>\n",
              "      <td>0.018850</td>\n",
              "      <td>-18409</td>\n",
              "      <td>-886</td>\n",
              "      <td>-3835.0</td>\n",
              "      <td>-1958</td>\n",
              "      <td>7.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Core staff</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>THURSDAY</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Self-employed</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.774506</td>\n",
              "      <td>0.627991</td>\n",
              "      <td>0.0577</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.9806</td>\n",
              "      <td>0.7348</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0418</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0544</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.099</td>\n",
              "      <td>0.0588</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.9806</td>\n",
              "      <td>0.7452</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0427</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0567</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.1048</td>\n",
              "      <td>0.0583</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.9806</td>\n",
              "      <td>0.7383</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0425</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0554</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.101</td>\n",
              "      <td>NaN</td>\n",
              "      <td>block of flats</td>\n",
              "      <td>0.0643</td>\n",
              "      <td>Stone, brick</td>\n",
              "      <td>No</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-689.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1a4c132-d891-42d0-a7c4-8556babdc23a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b1a4c132-d891-42d0-a7c4-8556babdc23a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b1a4c132-d891-42d0-a7c4-8556babdc23a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9d06ffc5-ff23-4553-8814-731fff11c061\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9d06ffc5-ff23-4553-8814-731fff11c061')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9d06ffc5-ff23-4553-8814-731fff11c061 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "train_data"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Checking the total number of entries and features available.\n",
        "train_data['TARGET'].value_counts()"
      ],
      "metadata": {
        "id": "Sz2idpdChD5c",
        "outputId": "643c705f-ece4-44d0-d089-d5d33309e600",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "TARGET\n",
              "0    141343\n",
              "1     12412\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plotting a histogram of the total counts for \"0\" and \"1\" in the \"TARGET\" column.\n",
        "train_data['TARGET'].astype(int).plot.hist()"
      ],
      "metadata": {
        "id": "C-31go1ChONo",
        "outputId": "9d11a8fa-2943-49d5-874f-70ef47976c52",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        }
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: ylabel='Frequency'>"
            ]
          },
          "metadata": {},
          "execution_count": 27
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculating the number of missing values and their percentage\n",
        "nann_values= train_data.isnull().sum()\n",
        "nann_values_percent= 100*train_data.isnull().sum()/len(train_data)\n",
        "\n",
        "# Combining the two series into a DataFrame\n",
        "nann_values_table= pd.concat([nann_values,nann_values_percent],axis=1)\n",
        "\n",
        "# Renaming the columns\n",
        "nann_values_table_ren_colum= nann_values_table.rename(columns={0:'Missing Values' , 1:'% of Total Values'})\n",
        "\n",
        "# Filtering out columns with 0% missing values and sort by percentage of missing values.\n",
        "nann_values_table_ren_colum=nann_values_table_ren_colum[nann_values_table_ren_colum.iloc[:,1]!=0].sort_values('% of Total Values',ascending =False).round(1)\n",
        "\n",
        "# Adjusting Pandas to display settings\n",
        "pd.set_option('display.max_rows', None)  # Show all rows\n",
        "pd.set_option('display.max_columns', None)  # Show all columns\n",
        "pd.set_option('display.width', None)  # Auto-detect the width of the display\n",
        "pd.set_option('display.max_colwidth', None)  # Show full column content\n",
        "\n",
        "# Displaying  the table\n",
        "print(nann_values_table_ren_colum)"
      ],
      "metadata": {
        "id": "RAk1rHSkhhDn",
        "outputId": "9834b7b9-dba3-4b20-dfd8-dfbff6d6006d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                              Missing Values  % of Total Values\n",
            "COMMONAREA_MEDI                       107523               69.9\n",
            "COMMONAREA_AVG                        107523               69.9\n",
            "COMMONAREA_MODE                       107523               69.9\n",
            "NONLIVINGAPARTMENTS_MEDI              106918               69.5\n",
            "NONLIVINGAPARTMENTS_MODE              106918               69.5\n",
            "NONLIVINGAPARTMENTS_AVG               106918               69.5\n",
            "LIVINGAPARTMENTS_MODE                 105193               68.4\n",
            "LIVINGAPARTMENTS_MEDI                 105193               68.4\n",
            "LIVINGAPARTMENTS_AVG                  105193               68.4\n",
            "FONDKAPREMONT_MODE                    105177               68.4\n",
            "FLOORSMIN_MODE                        104424               67.9\n",
            "FLOORSMIN_MEDI                        104424               67.9\n",
            "FLOORSMIN_AVG                         104424               67.9\n",
            "YEARS_BUILD_MODE                      102283               66.5\n",
            "YEARS_BUILD_MEDI                      102283               66.5\n",
            "YEARS_BUILD_AVG                       102283               66.5\n",
            "OWN_CAR_AGE                           101566               66.1\n",
            "LANDAREA_AVG                           91206               59.3\n",
            "LANDAREA_MEDI                          91206               59.3\n",
            "LANDAREA_MODE                          91206               59.3\n",
            "BASEMENTAREA_MEDI                      89907               58.5\n",
            "BASEMENTAREA_AVG                       89907               58.5\n",
            "BASEMENTAREA_MODE                      89907               58.5\n",
            "EXT_SOURCE_1                           86734               56.4\n",
            "NONLIVINGAREA_MEDI                     84860               55.2\n",
            "NONLIVINGAREA_MODE                     84860               55.2\n",
            "NONLIVINGAREA_AVG                      84860               55.2\n",
            "ELEVATORS_MEDI                         81973               53.3\n",
            "ELEVATORS_MODE                         81973               53.3\n",
            "ELEVATORS_AVG                          81973               53.3\n",
            "WALLSMATERIAL_MODE                     78142               50.8\n",
            "APARTMENTS_MODE                        78090               50.8\n",
            "APARTMENTS_MEDI                        78090               50.8\n",
            "APARTMENTS_AVG                         78090               50.8\n",
            "ENTRANCES_MODE                         77410               50.3\n",
            "ENTRANCES_AVG                          77410               50.3\n",
            "ENTRANCES_MEDI                         77410               50.3\n",
            "HOUSETYPE_MODE                         77137               50.2\n",
            "LIVINGAREA_MEDI                        77133               50.2\n",
            "LIVINGAREA_MODE                        77133               50.2\n",
            "LIVINGAREA_AVG                         77133               50.2\n",
            "FLOORSMAX_MEDI                         76518               49.8\n",
            "FLOORSMAX_AVG                          76518               49.8\n",
            "FLOORSMAX_MODE                         76518               49.8\n",
            "YEARS_BEGINEXPLUATATION_AVG            75022               48.8\n",
            "YEARS_BEGINEXPLUATATION_MEDI           75022               48.8\n",
            "YEARS_BEGINEXPLUATATION_MODE           75022               48.8\n",
            "TOTALAREA_MODE                         74242               48.3\n",
            "EMERGENCYSTATE_MODE                    72886               47.4\n",
            "OCCUPATION_TYPE                        48090               31.3\n",
            "EXT_SOURCE_3                           30529               19.9\n",
            "AMT_REQ_CREDIT_BUREAU_WEEK             20833               13.5\n",
            "AMT_REQ_CREDIT_BUREAU_DAY              20833               13.5\n",
            "AMT_REQ_CREDIT_BUREAU_MON              20833               13.5\n",
            "AMT_REQ_CREDIT_BUREAU_QRT              20833               13.5\n",
            "AMT_REQ_CREDIT_BUREAU_HOUR             20833               13.5\n",
            "AMT_REQ_CREDIT_BUREAU_YEAR             20833               13.5\n",
            "NAME_TYPE_SUITE                          654                0.4\n",
            "DEF_30_CNT_SOCIAL_CIRCLE                 541                0.4\n",
            "OBS_60_CNT_SOCIAL_CIRCLE                 541                0.4\n",
            "DEF_60_CNT_SOCIAL_CIRCLE                 541                0.4\n",
            "OBS_30_CNT_SOCIAL_CIRCLE                 541                0.4\n",
            "EXT_SOURCE_2                             303                0.2\n",
            "AMT_GOODS_PRICE                          149                0.1\n",
            "AMT_ANNUITY                                5                0.0\n",
            "CNT_FAM_MEMBERS                            1                0.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Verifying the number of counts values per type.\n",
        "train_data.dtypes.value_counts()"
      ],
      "metadata": {
        "id": "8D3tCc_Mhuy5",
        "outputId": "be97e574-a06b-42c1-c87e-117be1da3a49",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "float64    65\n",
              "int64      41\n",
              "object     16\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Among the provided variables or features in the training data. There are a total of 65 decimals, 41 integers, and 16 categorical."
      ],
      "metadata": {
        "id": "RSxcbvARh4zK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "train_data.select_dtypes('object').nunique() # Checking the number of unique values for categorical variables."
      ],
      "metadata": {
        "id": "dGpF0kCvh5t9",
        "outputId": "d09b8b33-38a9-4afb-835d-bd36a6670a50",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "NAME_CONTRACT_TYPE             2\n",
              "CODE_GENDER                    2\n",
              "FLAG_OWN_CAR                   2\n",
              "FLAG_OWN_REALTY                2\n",
              "NAME_TYPE_SUITE                7\n",
              "NAME_INCOME_TYPE               8\n",
              "NAME_EDUCATION_TYPE            5\n",
              "NAME_FAMILY_STATUS             6\n",
              "NAME_HOUSING_TYPE              6\n",
              "OCCUPATION_TYPE               18\n",
              "WEEKDAY_APPR_PROCESS_START     7\n",
              "ORGANIZATION_TYPE             58\n",
              "FONDKAPREMONT_MODE             4\n",
              "HOUSETYPE_MODE                 3\n",
              "WALLSMATERIAL_MODE             7\n",
              "EMERGENCYSTATE_MODE            2\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Except for ORGANIZATION_TYPE AND OCCUPATION_TYPE, the rest of the categorical variables has fewer unique values."
      ],
      "metadata": {
        "id": "oAP7QmtOwuen"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Checking bureau_data"
      ],
      "metadata": {
        "id": "9XEFnMcqiInv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bureau_data=pd.read_csv('/content/drive/MyDrive/AAI-510-Machine Learning/Group 5/Home Credit Default Risk Data/assignment/bureau_data.csv')\n",
        "print(bureau_data.shape)\n",
        "bureau_data.head()"
      ],
      "metadata": {
        "id": "FtJhEgyafGoJ",
        "outputId": "a93556f2-f9f4-4ad4-b496-11fd970db1a5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 314
        }
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(733097, 17)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   SK_ID_CURR  SK_ID_BUREAU CREDIT_ACTIVE CREDIT_CURRENCY  DAYS_CREDIT  CREDIT_DAY_OVERDUE  \\\n",
              "0      410704       5636127        Closed      currency 1        -2686                   0   \n",
              "1      410704       5636128        Closed      currency 1        -1280                   0   \n",
              "2      410704       5636129        Closed      currency 1        -1167                   0   \n",
              "3      410704       5636130        Closed      currency 1         -671                   0   \n",
              "4      410704       5636131        Active      currency 1         -560                   0   \n",
              "\n",
              "   DAYS_CREDIT_ENDDATE  DAYS_ENDDATE_FACT  AMT_CREDIT_MAX_OVERDUE  CNT_CREDIT_PROLONG  \\\n",
              "0              -1592.0            -1595.0                     NaN                   0   \n",
              "1                545.0             -959.0                     NaN                   0   \n",
              "2               -954.0             -954.0                     NaN                   0   \n",
              "3               -306.0             -303.0                     NaN                   0   \n",
              "4                  NaN                NaN                     NaN                   0   \n",
              "\n",
              "   AMT_CREDIT_SUM  AMT_CREDIT_SUM_DEBT  AMT_CREDIT_SUM_LIMIT  AMT_CREDIT_SUM_OVERDUE  \\\n",
              "0        720000.0                  0.0                   NaN                     0.0   \n",
              "1       1215000.0                  0.0                   NaN                     0.0   \n",
              "2         78619.5                  0.0                   NaN                     0.0   \n",
              "3        254700.0                  0.0                   NaN                     0.0   \n",
              "4             0.0                  0.0                   NaN                     0.0   \n",
              "\n",
              "       CREDIT_TYPE  DAYS_CREDIT_UPDATE  AMT_ANNUITY  \n",
              "0  Consumer credit               -1592          NaN  \n",
              "1  Consumer credit                -955          NaN  \n",
              "2  Consumer credit                -952          NaN  \n",
              "3  Consumer credit                -303          NaN  \n",
              "4      Credit card                -226          NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c73d0571-a366-4b25-bc2c-6d638a484051\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SK_ID_CURR</th>\n",
              "      <th>SK_ID_BUREAU</th>\n",
              "      <th>CREDIT_ACTIVE</th>\n",
              "      <th>CREDIT_CURRENCY</th>\n",
              "      <th>DAYS_CREDIT</th>\n",
              "      <th>CREDIT_DAY_OVERDUE</th>\n",
              "      <th>DAYS_CREDIT_ENDDATE</th>\n",
              "      <th>DAYS_ENDDATE_FACT</th>\n",
              "      <th>AMT_CREDIT_MAX_OVERDUE</th>\n",
              "      <th>CNT_CREDIT_PROLONG</th>\n",
              "      <th>AMT_CREDIT_SUM</th>\n",
              "      <th>AMT_CREDIT_SUM_DEBT</th>\n",
              "      <th>AMT_CREDIT_SUM_LIMIT</th>\n",
              "      <th>AMT_CREDIT_SUM_OVERDUE</th>\n",
              "      <th>CREDIT_TYPE</th>\n",
              "      <th>DAYS_CREDIT_UPDATE</th>\n",
              "      <th>AMT_ANNUITY</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>410704</td>\n",
              "      <td>5636127</td>\n",
              "      <td>Closed</td>\n",
              "      <td>currency 1</td>\n",
              "      <td>-2686</td>\n",
              "      <td>0</td>\n",
              "      <td>-1592.0</td>\n",
              "      <td>-1595.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>720000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Consumer credit</td>\n",
              "      <td>-1592</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>410704</td>\n",
              "      <td>5636128</td>\n",
              "      <td>Closed</td>\n",
              "      <td>currency 1</td>\n",
              "      <td>-1280</td>\n",
              "      <td>0</td>\n",
              "      <td>545.0</td>\n",
              "      <td>-959.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>1215000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Consumer credit</td>\n",
              "      <td>-955</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>410704</td>\n",
              "      <td>5636129</td>\n",
              "      <td>Closed</td>\n",
              "      <td>currency 1</td>\n",
              "      <td>-1167</td>\n",
              "      <td>0</td>\n",
              "      <td>-954.0</td>\n",
              "      <td>-954.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>78619.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Consumer credit</td>\n",
              "      <td>-952</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>410704</td>\n",
              "      <td>5636130</td>\n",
              "      <td>Closed</td>\n",
              "      <td>currency 1</td>\n",
              "      <td>-671</td>\n",
              "      <td>0</td>\n",
              "      <td>-306.0</td>\n",
              "      <td>-303.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>254700.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Consumer credit</td>\n",
              "      <td>-303</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>410704</td>\n",
              "      <td>5636131</td>\n",
              "      <td>Active</td>\n",
              "      <td>currency 1</td>\n",
              "      <td>-560</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Credit card</td>\n",
              "      <td>-226</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c73d0571-a366-4b25-bc2c-6d638a484051')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c73d0571-a366-4b25-bc2c-6d638a484051 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c73d0571-a366-4b25-bc2c-6d638a484051');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b54fa4e3-54dd-4979-b5ec-1ef7854aab1e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b54fa4e3-54dd-4979-b5ec-1ef7854aab1e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b54fa4e3-54dd-4979-b5ec-1ef7854aab1e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "bureau_data"
            }
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculating the number of missing values and their percentage\n",
        "nann_values= bureau_data.isnull().sum()\n",
        "nann_values_percent= 100*bureau_data.isnull().sum()/len(bureau_data)\n",
        "\n",
        "# Combining the two series into a DataFrame\n",
        "nann_values_table= pd.concat([nann_values,nann_values_percent],axis=1)\n",
        "\n",
        "# Renaming the columns\n",
        "nann_values_table_ren_colum= nann_values_table.rename(columns={0:'Missing Values' , 1:'% of Total Values'})\n",
        "\n",
        "# Filtering out columns with 0% missing values and sort by percentage of missing values.\n",
        "nann_values_table_ren_colum=nann_values_table_ren_colum[nann_values_table_ren_colum.iloc[:,1]!=0].sort_values('% of Total Values',ascending =False).round(1)\n",
        "\n",
        "# Adjusting Pandas to display settings\n",
        "pd.set_option('display.max_rows', None)  # Show all rows\n",
        "pd.set_option('display.max_columns', None)  # Show all columns\n",
        "pd.set_option('display.width', None)  # Auto-detect the width of the display\n",
        "pd.set_option('display.max_colwidth', None)  # Show full column content\n",
        "\n",
        "# Displaying  the table\n",
        "print(nann_values_table_ren_colum)"
      ],
      "metadata": {
        "id": "rlTE9lemiLm6",
        "outputId": "af05fac5-ece1-47e1-9352-521f9df63a07",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                        Missing Values  % of Total Values\n",
            "AMT_ANNUITY                     566245               77.2\n",
            "AMT_CREDIT_MAX_OVERDUE          475076               64.8\n",
            "DAYS_ENDDATE_FACT               272089               37.1\n",
            "AMT_CREDIT_SUM_LIMIT            245511               33.5\n",
            "AMT_CREDIT_SUM_DEBT             111959               15.3\n",
            "DAYS_CREDIT_ENDDATE              44884                6.1\n",
            "AMT_CREDIT_SUM                       1                0.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Verifying the number of counts values per type.\n",
        "bureau_data.dtypes.value_counts()"
      ],
      "metadata": {
        "id": "jPRh5SiZijMz",
        "outputId": "cf4b474e-2826-4f34-d1dc-1d90b1ed9ba4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "float64    8\n",
              "int64      6\n",
              "object     3\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Among the provided variables or features in the bureau_dataa. There are a total of 8 decimals, 6 integers, and 3 categorical."
      ],
      "metadata": {
        "id": "vEf0AdJIirjJ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Checking application data"
      ],
      "metadata": {
        "id": "XkBAN7KijcpV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "app_data= pd.read_csv('/content/drive/MyDrive/AAI-510-Machine Learning/Group 5/Home Credit Default Risk Data/assignment/prev_application_data.csv')\n",
        "print(app_data.shape)\n",
        "app_data.head()"
      ],
      "metadata": {
        "id": "2gFzf9W8fvSR",
        "outputId": "be54a13a-6ecc-4485-e54b-4939ffa789f6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        }
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(707181, 37)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   SK_ID_CURR  SK_ID_PREV NAME_CONTRACT_TYPE  AMT_ANNUITY  AMT_APPLICATION  \\\n",
              "0      410704     2403862     Consumer loans     8442.135          88110.0   \n",
              "1      410704     1677988     Consumer loans    10524.780          92664.0   \n",
              "2      410704     1781407     Consumer loans    12323.745          73180.8   \n",
              "3      410704     2332437     Consumer loans     4383.225          38205.0   \n",
              "4      410704     2382518     Consumer loans    12897.495         149400.0   \n",
              "\n",
              "   AMT_CREDIT  AMT_DOWN_PAYMENT  AMT_GOODS_PRICE WEEKDAY_APPR_PROCESS_START  \\\n",
              "0     74610.0           13500.0          88110.0                   SATURDAY   \n",
              "1     92664.0               0.0          92664.0                   SATURDAY   \n",
              "2     58545.0           14635.8          73180.8                     SUNDAY   \n",
              "3     37786.5            3820.5          38205.0                     MONDAY   \n",
              "4    134460.0           14940.0         149400.0                  WEDNESDAY   \n",
              "\n",
              "   HOUR_APPR_PROCESS_START  ... NAME_SELLER_INDUSTRY  CNT_PAYMENT  \\\n",
              "0                       11  ...         Connectivity         12.0   \n",
              "1                       18  ...         Connectivity         10.0   \n",
              "2                       11  ...         Connectivity          5.0   \n",
              "3                       12  ...         Connectivity         12.0   \n",
              "4                       15  ...         Construction         12.0   \n",
              "\n",
              "   NAME_YIELD_GROUP          PRODUCT_COMBINATION  DAYS_FIRST_DRAWING  \\\n",
              "0              high     POS mobile with interest            365243.0   \n",
              "1        low_normal  POS mobile without interest            365243.0   \n",
              "2        low_normal  POS mobile without interest            365243.0   \n",
              "3              high     POS mobile with interest            365243.0   \n",
              "4        low_normal   POS industry with interest            365243.0   \n",
              "\n",
              "  DAYS_FIRST_DUE DAYS_LAST_DUE_1ST_VERSION  DAYS_LAST_DUE DAYS_TERMINATION  \\\n",
              "0         -591.0                    -261.0         -261.0           -255.0   \n",
              "1         -144.0                     126.0       365243.0         365243.0   \n",
              "2        -1223.0                   -1103.0        -1103.0          -1095.0   \n",
              "3        -2195.0                   -1865.0        -1895.0          -1893.0   \n",
              "4       365243.0                     340.0       365243.0         365243.0   \n",
              "\n",
              "  NFLAG_INSURED_ON_APPROVAL  \n",
              "0                       0.0  \n",
              "1                       0.0  \n",
              "2                       0.0  \n",
              "3                       0.0  \n",
              "4                       0.0  \n",
              "\n",
              "[5 rows x 37 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ebe17609-48ad-42dd-82e4-18acb0d788fd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SK_ID_CURR</th>\n",
              "      <th>SK_ID_PREV</th>\n",
              "      <th>NAME_CONTRACT_TYPE</th>\n",
              "      <th>AMT_ANNUITY</th>\n",
              "      <th>AMT_APPLICATION</th>\n",
              "      <th>AMT_CREDIT</th>\n",
              "      <th>AMT_DOWN_PAYMENT</th>\n",
              "      <th>AMT_GOODS_PRICE</th>\n",
              "      <th>WEEKDAY_APPR_PROCESS_START</th>\n",
              "      <th>HOUR_APPR_PROCESS_START</th>\n",
              "      <th>...</th>\n",
              "      <th>NAME_SELLER_INDUSTRY</th>\n",
              "      <th>CNT_PAYMENT</th>\n",
              "      <th>NAME_YIELD_GROUP</th>\n",
              "      <th>PRODUCT_COMBINATION</th>\n",
              "      <th>DAYS_FIRST_DRAWING</th>\n",
              "      <th>DAYS_FIRST_DUE</th>\n",
              "      <th>DAYS_LAST_DUE_1ST_VERSION</th>\n",
              "      <th>DAYS_LAST_DUE</th>\n",
              "      <th>DAYS_TERMINATION</th>\n",
              "      <th>NFLAG_INSURED_ON_APPROVAL</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>410704</td>\n",
              "      <td>2403862</td>\n",
              "      <td>Consumer loans</td>\n",
              "      <td>8442.135</td>\n",
              "      <td>88110.0</td>\n",
              "      <td>74610.0</td>\n",
              "      <td>13500.0</td>\n",
              "      <td>88110.0</td>\n",
              "      <td>SATURDAY</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>Connectivity</td>\n",
              "      <td>12.0</td>\n",
              "      <td>high</td>\n",
              "      <td>POS mobile with interest</td>\n",
              "      <td>365243.0</td>\n",
              "      <td>-591.0</td>\n",
              "      <td>-261.0</td>\n",
              "      <td>-261.0</td>\n",
              "      <td>-255.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>410704</td>\n",
              "      <td>1677988</td>\n",
              "      <td>Consumer loans</td>\n",
              "      <td>10524.780</td>\n",
              "      <td>92664.0</td>\n",
              "      <td>92664.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>92664.0</td>\n",
              "      <td>SATURDAY</td>\n",
              "      <td>18</td>\n",
              "      <td>...</td>\n",
              "      <td>Connectivity</td>\n",
              "      <td>10.0</td>\n",
              "      <td>low_normal</td>\n",
              "      <td>POS mobile without interest</td>\n",
              "      <td>365243.0</td>\n",
              "      <td>-144.0</td>\n",
              "      <td>126.0</td>\n",
              "      <td>365243.0</td>\n",
              "      <td>365243.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>410704</td>\n",
              "      <td>1781407</td>\n",
              "      <td>Consumer loans</td>\n",
              "      <td>12323.745</td>\n",
              "      <td>73180.8</td>\n",
              "      <td>58545.0</td>\n",
              "      <td>14635.8</td>\n",
              "      <td>73180.8</td>\n",
              "      <td>SUNDAY</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>Connectivity</td>\n",
              "      <td>5.0</td>\n",
              "      <td>low_normal</td>\n",
              "      <td>POS mobile without interest</td>\n",
              "      <td>365243.0</td>\n",
              "      <td>-1223.0</td>\n",
              "      <td>-1103.0</td>\n",
              "      <td>-1103.0</td>\n",
              "      <td>-1095.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>410704</td>\n",
              "      <td>2332437</td>\n",
              "      <td>Consumer loans</td>\n",
              "      <td>4383.225</td>\n",
              "      <td>38205.0</td>\n",
              "      <td>37786.5</td>\n",
              "      <td>3820.5</td>\n",
              "      <td>38205.0</td>\n",
              "      <td>MONDAY</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>Connectivity</td>\n",
              "      <td>12.0</td>\n",
              "      <td>high</td>\n",
              "      <td>POS mobile with interest</td>\n",
              "      <td>365243.0</td>\n",
              "      <td>-2195.0</td>\n",
              "      <td>-1865.0</td>\n",
              "      <td>-1895.0</td>\n",
              "      <td>-1893.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>410704</td>\n",
              "      <td>2382518</td>\n",
              "      <td>Consumer loans</td>\n",
              "      <td>12897.495</td>\n",
              "      <td>149400.0</td>\n",
              "      <td>134460.0</td>\n",
              "      <td>14940.0</td>\n",
              "      <td>149400.0</td>\n",
              "      <td>WEDNESDAY</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>Construction</td>\n",
              "      <td>12.0</td>\n",
              "      <td>low_normal</td>\n",
              "      <td>POS industry with interest</td>\n",
              "      <td>365243.0</td>\n",
              "      <td>365243.0</td>\n",
              "      <td>340.0</td>\n",
              "      <td>365243.0</td>\n",
              "      <td>365243.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 37 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ebe17609-48ad-42dd-82e4-18acb0d788fd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ebe17609-48ad-42dd-82e4-18acb0d788fd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ebe17609-48ad-42dd-82e4-18acb0d788fd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6122f88e-f09c-448f-b5c2-c1d4996b2460\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6122f88e-f09c-448f-b5c2-c1d4996b2460')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6122f88e-f09c-448f-b5c2-c1d4996b2460 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "app_data"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculating the number of missing values and their percentage\n",
        "nann_values= app_data.isnull().sum()\n",
        "nann_values_percent= 100*app_data.isnull().sum()/len(app_data)\n",
        "\n",
        "# Combining the two series into a DataFrame\n",
        "nann_values_table= pd.concat([nann_values,nann_values_percent],axis=1)\n",
        "\n",
        "# Renaming the columns\n",
        "nann_values_table_ren_colum= nann_values_table.rename(columns={0:'Missing Values' , 1:'% of Total Values'})\n",
        "\n",
        "# Filtering out columns with 0% missing values and sort by percentage of missing values.\n",
        "nann_values_table_ren_colum=nann_values_table_ren_colum[nann_values_table_ren_colum.iloc[:,1]!=0].sort_values('% of Total Values',ascending =False).round(1)\n",
        "\n",
        "# Adjusting Pandas to display settings\n",
        "pd.set_option('display.max_rows', None)  # Show all rows\n",
        "pd.set_option('display.max_columns', None)  # Show all columns\n",
        "pd.set_option('display.width', None)  # Auto-detect the width of the display\n",
        "pd.set_option('display.max_colwidth', None)  # Show full column content\n",
        "\n",
        "# Displaying  the table\n",
        "print(nann_values_table_ren_colum)"
      ],
      "metadata": {
        "id": "fVWJp-MRjgsU",
        "outputId": "c611023e-ad51-4f14-ed05-71179ad51440",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                           Missing Values  % of Total Values\n",
            "RATE_INTEREST_PRIMARY              704790               99.7\n",
            "RATE_INTEREST_PRIVILEGED           704790               99.7\n",
            "AMT_DOWN_PAYMENT                   375242               53.1\n",
            "RATE_DOWN_PAYMENT                  375242               53.1\n",
            "NAME_TYPE_SUITE                    348157               49.2\n",
            "DAYS_FIRST_DRAWING                 281135               39.8\n",
            "DAYS_FIRST_DUE                     281135               39.8\n",
            "DAYS_LAST_DUE_1ST_VERSION          281135               39.8\n",
            "DAYS_LAST_DUE                      281135               39.8\n",
            "DAYS_TERMINATION                   281135               39.8\n",
            "NFLAG_INSURED_ON_APPROVAL          281135               39.8\n",
            "AMT_GOODS_PRICE                    160437               22.7\n",
            "AMT_ANNUITY                        154509               21.8\n",
            "CNT_PAYMENT                        154506               21.8\n",
            "PRODUCT_COMBINATION                   153                0.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Verifying the number of counts values per type.\n",
        "app_data.dtypes.value_counts()"
      ],
      "metadata": {
        "id": "vRpcY2FfkFNv",
        "outputId": "401d7d59-5440-413c-898b-7db69f61d3bd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "object     16\n",
              "float64    15\n",
              "int64       6\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Among the provided variables or features in the app_dataa. There are a total of 16 decimals, 15 integers, and 6 categorical."
      ],
      "metadata": {
        "id": "lMi_e41TkSCF"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Checking cc_data"
      ],
      "metadata": {
        "id": "ln3XKyWXi-RL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "cc_data=pd.read_csv('/content/drive/MyDrive/AAI-510-Machine Learning/Group 5/Home Credit Default Risk Data/assignment/cc_balance_data.csv')\n",
        "print(cc_data.shape)\n",
        "cc_data.head()"
      ],
      "metadata": {
        "id": "aagxl49MfYsv",
        "outputId": "75bf50c0-a5be-4557-b84a-129156db8388",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        }
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1178248, 23)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   SK_ID_PREV  SK_ID_CURR  MONTHS_BALANCE  AMT_BALANCE  \\\n",
              "0     2153968      381230             -17          0.0   \n",
              "1     2153968      381230              -9          0.0   \n",
              "2     2153968      381230             -23          0.0   \n",
              "3     2153968      381230              -8          0.0   \n",
              "4     2153968      381230             -12          0.0   \n",
              "\n",
              "   AMT_CREDIT_LIMIT_ACTUAL  AMT_DRAWINGS_ATM_CURRENT  AMT_DRAWINGS_CURRENT  \\\n",
              "0                    45000                       0.0                   0.0   \n",
              "1                        0                       0.0                   0.0   \n",
              "2                    45000                       0.0                   0.0   \n",
              "3                        0                       0.0                   0.0   \n",
              "4                    45000                       0.0                   0.0   \n",
              "\n",
              "   AMT_DRAWINGS_OTHER_CURRENT  AMT_DRAWINGS_POS_CURRENT  \\\n",
              "0                         0.0                       0.0   \n",
              "1                         0.0                       0.0   \n",
              "2                         0.0                       0.0   \n",
              "3                         0.0                       0.0   \n",
              "4                         0.0                       0.0   \n",
              "\n",
              "   AMT_INST_MIN_REGULARITY  ...  AMT_RECIVABLE  AMT_TOTAL_RECEIVABLE  \\\n",
              "0                      0.0  ...            0.0                   0.0   \n",
              "1                      0.0  ...            0.0                   0.0   \n",
              "2                      NaN  ...            0.0                   0.0   \n",
              "3                      0.0  ...            0.0                   0.0   \n",
              "4                      0.0  ...            0.0                   0.0   \n",
              "\n",
              "   CNT_DRAWINGS_ATM_CURRENT  CNT_DRAWINGS_CURRENT  CNT_DRAWINGS_OTHER_CURRENT  \\\n",
              "0                       0.0                     0                         0.0   \n",
              "1                       0.0                     0                         0.0   \n",
              "2                       0.0                     0                         0.0   \n",
              "3                       0.0                     0                         0.0   \n",
              "4                       0.0                     0                         0.0   \n",
              "\n",
              "   CNT_DRAWINGS_POS_CURRENT  CNT_INSTALMENT_MATURE_CUM  NAME_CONTRACT_STATUS  \\\n",
              "0                       0.0                        0.0                Active   \n",
              "1                       0.0                        0.0                Active   \n",
              "2                       0.0                        NaN                Active   \n",
              "3                       0.0                        0.0                Active   \n",
              "4                       0.0                        0.0                Active   \n",
              "\n",
              "   SK_DPD  SK_DPD_DEF  \n",
              "0       0           0  \n",
              "1       0           0  \n",
              "2       0           0  \n",
              "3       0           0  \n",
              "4       0           0  \n",
              "\n",
              "[5 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dde5b0b4-cddc-4d2b-9425-02a003cf5d14\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SK_ID_PREV</th>\n",
              "      <th>SK_ID_CURR</th>\n",
              "      <th>MONTHS_BALANCE</th>\n",
              "      <th>AMT_BALANCE</th>\n",
              "      <th>AMT_CREDIT_LIMIT_ACTUAL</th>\n",
              "      <th>AMT_DRAWINGS_ATM_CURRENT</th>\n",
              "      <th>AMT_DRAWINGS_CURRENT</th>\n",
              "      <th>AMT_DRAWINGS_OTHER_CURRENT</th>\n",
              "      <th>AMT_DRAWINGS_POS_CURRENT</th>\n",
              "      <th>AMT_INST_MIN_REGULARITY</th>\n",
              "      <th>...</th>\n",
              "      <th>AMT_RECIVABLE</th>\n",
              "      <th>AMT_TOTAL_RECEIVABLE</th>\n",
              "      <th>CNT_DRAWINGS_ATM_CURRENT</th>\n",
              "      <th>CNT_DRAWINGS_CURRENT</th>\n",
              "      <th>CNT_DRAWINGS_OTHER_CURRENT</th>\n",
              "      <th>CNT_DRAWINGS_POS_CURRENT</th>\n",
              "      <th>CNT_INSTALMENT_MATURE_CUM</th>\n",
              "      <th>NAME_CONTRACT_STATUS</th>\n",
              "      <th>SK_DPD</th>\n",
              "      <th>SK_DPD_DEF</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2153968</td>\n",
              "      <td>381230</td>\n",
              "      <td>-17</td>\n",
              "      <td>0.0</td>\n",
              "      <td>45000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Active</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2153968</td>\n",
              "      <td>381230</td>\n",
              "      <td>-9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Active</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2153968</td>\n",
              "      <td>381230</td>\n",
              "      <td>-23</td>\n",
              "      <td>0.0</td>\n",
              "      <td>45000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Active</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2153968</td>\n",
              "      <td>381230</td>\n",
              "      <td>-8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Active</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2153968</td>\n",
              "      <td>381230</td>\n",
              "      <td>-12</td>\n",
              "      <td>0.0</td>\n",
              "      <td>45000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Active</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dde5b0b4-cddc-4d2b-9425-02a003cf5d14')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-dde5b0b4-cddc-4d2b-9425-02a003cf5d14 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-dde5b0b4-cddc-4d2b-9425-02a003cf5d14');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d3517a30-1d92-4f2a-9775-d96116d209ae\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d3517a30-1d92-4f2a-9775-d96116d209ae')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d3517a30-1d92-4f2a-9775-d96116d209ae button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "cc_data"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculating the number of missing values and their percentage\n",
        "nann_values= cc_data.isnull().sum()\n",
        "nann_values_percent= 100*cc_data.isnull().sum()/len(cc_data)\n",
        "\n",
        "# Combining the two series into a DataFrame\n",
        "nann_values_table= pd.concat([nann_values,nann_values_percent],axis=1)\n",
        "\n",
        "# Renaming the columns\n",
        "nann_values_table_ren_colum= nann_values_table.rename(columns={0:'Missing Values' , 1:'% of Total Values'})\n",
        "\n",
        "# Filtering out columns with 0% missing values and sort by percentage of missing values.\n",
        "nann_values_table_ren_colum=nann_values_table_ren_colum[nann_values_table_ren_colum.iloc[:,1]!=0].sort_values('% of Total Values',ascending =False).round(1)\n",
        "\n",
        "# Adjusting Pandas to display settings\n",
        "pd.set_option('display.max_rows', None)  # Show all rows\n",
        "pd.set_option('display.max_columns', None)  # Show all columns\n",
        "pd.set_option('display.width', None)  # Auto-detect the width of the display\n",
        "pd.set_option('display.max_colwidth', None)  # Show full column content\n",
        "\n",
        "# Displaying  the table\n",
        "print(nann_values_table_ren_colum)"
      ],
      "metadata": {
        "id": "DrsK0d5GjCzK",
        "outputId": "ef13d4ec-8892-42b9-c115-400eee2023dd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            Missing Values  % of Total Values\n",
            "AMT_PAYMENT_CURRENT                 272744               23.1\n",
            "AMT_DRAWINGS_ATM_CURRENT            263221               22.3\n",
            "AMT_DRAWINGS_OTHER_CURRENT          263221               22.3\n",
            "AMT_DRAWINGS_POS_CURRENT            263221               22.3\n",
            "CNT_DRAWINGS_ATM_CURRENT            263221               22.3\n",
            "CNT_DRAWINGS_OTHER_CURRENT          263221               22.3\n",
            "CNT_DRAWINGS_POS_CURRENT            263221               22.3\n",
            "AMT_INST_MIN_REGULARITY             100540                8.5\n",
            "CNT_INSTALMENT_MATURE_CUM           100540                8.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Checking install_data"
      ],
      "metadata": {
        "id": "FfeCXoQFjvWO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "install_data=pd.read_csv('/content/drive/MyDrive/AAI-510-Machine Learning/Group 5/Home Credit Default Risk Data/assignment/installments_data.csv')\n",
        "print(install_data.shape)\n",
        "install_data.head()"
      ],
      "metadata": {
        "id": "q5townETgBe9",
        "outputId": "15e401a5-8288-4d74-ab47-01081b2e1f0f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        }
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(5271588, 8)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   SK_ID_PREV  SK_ID_CURR  NUM_INSTALMENT_VERSION  NUM_INSTALMENT_NUMBER  \\\n",
              "0     2403862      410704                     1.0                      1   \n",
              "1     2403862      410704                     1.0                     12   \n",
              "2     2403862      410704                     1.0                      4   \n",
              "3     2403862      410704                     1.0                      8   \n",
              "4     2403862      410704                     1.0                      6   \n",
              "\n",
              "   DAYS_INSTALMENT  DAYS_ENTRY_PAYMENT  AMT_INSTALMENT  AMT_PAYMENT  \n",
              "0           -591.0              -610.0        8442.135     8442.135  \n",
              "1           -261.0              -264.0        8441.190     8441.190  \n",
              "2           -501.0              -506.0        8442.135     8442.135  \n",
              "3           -381.0              -380.0        8442.135     8442.135  \n",
              "4           -441.0              -442.0        8442.135     8442.135  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-84cf453c-b703-4590-9aac-f5a74641e426\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SK_ID_PREV</th>\n",
              "      <th>SK_ID_CURR</th>\n",
              "      <th>NUM_INSTALMENT_VERSION</th>\n",
              "      <th>NUM_INSTALMENT_NUMBER</th>\n",
              "      <th>DAYS_INSTALMENT</th>\n",
              "      <th>DAYS_ENTRY_PAYMENT</th>\n",
              "      <th>AMT_INSTALMENT</th>\n",
              "      <th>AMT_PAYMENT</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2403862</td>\n",
              "      <td>410704</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>-591.0</td>\n",
              "      <td>-610.0</td>\n",
              "      <td>8442.135</td>\n",
              "      <td>8442.135</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2403862</td>\n",
              "      <td>410704</td>\n",
              "      <td>1.0</td>\n",
              "      <td>12</td>\n",
              "      <td>-261.0</td>\n",
              "      <td>-264.0</td>\n",
              "      <td>8441.190</td>\n",
              "      <td>8441.190</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2403862</td>\n",
              "      <td>410704</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4</td>\n",
              "      <td>-501.0</td>\n",
              "      <td>-506.0</td>\n",
              "      <td>8442.135</td>\n",
              "      <td>8442.135</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2403862</td>\n",
              "      <td>410704</td>\n",
              "      <td>1.0</td>\n",
              "      <td>8</td>\n",
              "      <td>-381.0</td>\n",
              "      <td>-380.0</td>\n",
              "      <td>8442.135</td>\n",
              "      <td>8442.135</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2403862</td>\n",
              "      <td>410704</td>\n",
              "      <td>1.0</td>\n",
              "      <td>6</td>\n",
              "      <td>-441.0</td>\n",
              "      <td>-442.0</td>\n",
              "      <td>8442.135</td>\n",
              "      <td>8442.135</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84cf453c-b703-4590-9aac-f5a74641e426')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-84cf453c-b703-4590-9aac-f5a74641e426 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-84cf453c-b703-4590-9aac-f5a74641e426');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1864ae19-3084-4e24-9d57-c3beeb1fb9a0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1864ae19-3084-4e24-9d57-c3beeb1fb9a0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1864ae19-3084-4e24-9d57-c3beeb1fb9a0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "install_data"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Checking cash_data"
      ],
      "metadata": {
        "id": "avUE2Kjyjzp4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "cash_data=pd.read_csv('/content/drive/MyDrive/AAI-510-Machine Learning/Group 5/Home Credit Default Risk Data/assignment/pos_cash_balance_data.csv')\n",
        "print(cash_data.shape)\n",
        "cash_data.head()"
      ],
      "metadata": {
        "id": "osVa01HGgUjo",
        "outputId": "4179473e-fe98-4b59-ee66-da2a515f23fa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        }
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(4115815, 8)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   SK_ID_PREV  SK_ID_CURR  MONTHS_BALANCE  CNT_INSTALMENT  \\\n",
              "0     2403862      410704             -17            12.0   \n",
              "1     2403862      410704             -15            12.0   \n",
              "2     2403862      410704             -18            12.0   \n",
              "3     2403862      410704             -19            12.0   \n",
              "4     2403862      410704             -13            12.0   \n",
              "\n",
              "   CNT_INSTALMENT_FUTURE NAME_CONTRACT_STATUS  SK_DPD  SK_DPD_DEF  \n",
              "0                    9.0               Active       0           0  \n",
              "1                    7.0               Active       0           0  \n",
              "2                   10.0               Active       0           0  \n",
              "3                   11.0               Active       0           0  \n",
              "4                    5.0               Active       0           0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8ad22b4f-6ad2-4d13-9fad-c9c3d2b8278c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SK_ID_PREV</th>\n",
              "      <th>SK_ID_CURR</th>\n",
              "      <th>MONTHS_BALANCE</th>\n",
              "      <th>CNT_INSTALMENT</th>\n",
              "      <th>CNT_INSTALMENT_FUTURE</th>\n",
              "      <th>NAME_CONTRACT_STATUS</th>\n",
              "      <th>SK_DPD</th>\n",
              "      <th>SK_DPD_DEF</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2403862</td>\n",
              "      <td>410704</td>\n",
              "      <td>-17</td>\n",
              "      <td>12.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>Active</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2403862</td>\n",
              "      <td>410704</td>\n",
              "      <td>-15</td>\n",
              "      <td>12.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>Active</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2403862</td>\n",
              "      <td>410704</td>\n",
              "      <td>-18</td>\n",
              "      <td>12.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>Active</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2403862</td>\n",
              "      <td>410704</td>\n",
              "      <td>-19</td>\n",
              "      <td>12.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>Active</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2403862</td>\n",
              "      <td>410704</td>\n",
              "      <td>-13</td>\n",
              "      <td>12.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>Active</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ad22b4f-6ad2-4d13-9fad-c9c3d2b8278c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8ad22b4f-6ad2-4d13-9fad-c9c3d2b8278c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8ad22b4f-6ad2-4d13-9fad-c9c3d2b8278c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-354c28d3-20a9-4b1b-aad2-51d66f800a38\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-354c28d3-20a9-4b1b-aad2-51d66f800a38')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-354c28d3-20a9-4b1b-aad2-51d66f800a38 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "cash_data"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "2S9zCM3JloC_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Merge datasets (Train_data + bureau_data)"
      ],
      "metadata": {
        "id": "00eQAa1_xdDN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "merged_df= pd.merge(train_data,bureau_data, on = ['SK_ID_CURR'], how = 'outer')"
      ],
      "metadata": {
        "id": "_RNg07bJxfe0"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(merged_df.shape)\n",
        "merged_df.head()"
      ],
      "metadata": {
        "id": "yfpHulXmy-y5",
        "outputId": "2250fa26-a831-4e05-f958-2e18a370cf83",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        }
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(755182, 138)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   SK_ID_CURR  TARGET NAME_CONTRACT_TYPE CODE_GENDER FLAG_OWN_CAR FLAG_OWN_REALTY  CNT_CHILDREN  \\\n",
              "0      410704       0         Cash loans           F            N               Y             1   \n",
              "1      410704       0         Cash loans           F            N               Y             1   \n",
              "2      410704       0         Cash loans           F            N               Y             1   \n",
              "3      410704       0         Cash loans           F            N               Y             1   \n",
              "4      410704       0         Cash loans           F            N               Y             1   \n",
              "\n",
              "   AMT_INCOME_TOTAL  AMT_CREDIT  AMT_ANNUITY_x  AMT_GOODS_PRICE NAME_TYPE_SUITE NAME_INCOME_TYPE  \\\n",
              "0          157500.0    900000.0        26446.5         900000.0   Unaccompanied          Working   \n",
              "1          157500.0    900000.0        26446.5         900000.0   Unaccompanied          Working   \n",
              "2          157500.0    900000.0        26446.5         900000.0   Unaccompanied          Working   \n",
              "3          157500.0    900000.0        26446.5         900000.0   Unaccompanied          Working   \n",
              "4          157500.0    900000.0        26446.5         900000.0   Unaccompanied          Working   \n",
              "\n",
              "             NAME_EDUCATION_TYPE NAME_FAMILY_STATUS  NAME_HOUSING_TYPE  \\\n",
              "0  Secondary / secondary special            Married  House / apartment   \n",
              "1  Secondary / secondary special            Married  House / apartment   \n",
              "2  Secondary / secondary special            Married  House / apartment   \n",
              "3  Secondary / secondary special            Married  House / apartment   \n",
              "4  Secondary / secondary special            Married  House / apartment   \n",
              "\n",
              "   REGION_POPULATION_RELATIVE  DAYS_BIRTH  DAYS_EMPLOYED  DAYS_REGISTRATION  DAYS_ID_PUBLISH  \\\n",
              "0                    0.010006      -16180          -2037            -3722.0            -3495   \n",
              "1                    0.010006      -16180          -2037            -3722.0            -3495   \n",
              "2                    0.010006      -16180          -2037            -3722.0            -3495   \n",
              "3                    0.010006      -16180          -2037            -3722.0            -3495   \n",
              "4                    0.010006      -16180          -2037            -3722.0            -3495   \n",
              "\n",
              "   OWN_CAR_AGE  FLAG_MOBIL  FLAG_EMP_PHONE  FLAG_WORK_PHONE  FLAG_CONT_MOBILE  FLAG_PHONE  \\\n",
              "0          NaN           1               1                1                 1           1   \n",
              "1          NaN           1               1                1                 1           1   \n",
              "2          NaN           1               1                1                 1           1   \n",
              "3          NaN           1               1                1                 1           1   \n",
              "4          NaN           1               1                1                 1           1   \n",
              "\n",
              "   FLAG_EMAIL OCCUPATION_TYPE  CNT_FAM_MEMBERS  REGION_RATING_CLIENT  REGION_RATING_CLIENT_W_CITY  \\\n",
              "0           0             NaN              3.0                     2                            2   \n",
              "1           0             NaN              3.0                     2                            2   \n",
              "2           0             NaN              3.0                     2                            2   \n",
              "3           0             NaN              3.0                     2                            2   \n",
              "4           0             NaN              3.0                     2                            2   \n",
              "\n",
              "  WEEKDAY_APPR_PROCESS_START  HOUR_APPR_PROCESS_START  REG_REGION_NOT_LIVE_REGION  \\\n",
              "0                  WEDNESDAY                        8                           0   \n",
              "1                  WEDNESDAY                        8                           0   \n",
              "2                  WEDNESDAY                        8                           0   \n",
              "3                  WEDNESDAY                        8                           0   \n",
              "4                  WEDNESDAY                        8                           0   \n",
              "\n",
              "   REG_REGION_NOT_WORK_REGION  LIVE_REGION_NOT_WORK_REGION  REG_CITY_NOT_LIVE_CITY  \\\n",
              "0                           0                            0                       0   \n",
              "1                           0                            0                       0   \n",
              "2                           0                            0                       0   \n",
              "3                           0                            0                       0   \n",
              "4                           0                            0                       0   \n",
              "\n",
              "   REG_CITY_NOT_WORK_CITY  LIVE_CITY_NOT_WORK_CITY       ORGANIZATION_TYPE  EXT_SOURCE_1  \\\n",
              "0                       0                        0  Business Entity Type 3           NaN   \n",
              "1                       0                        0  Business Entity Type 3           NaN   \n",
              "2                       0                        0  Business Entity Type 3           NaN   \n",
              "3                       0                        0  Business Entity Type 3           NaN   \n",
              "4                       0                        0  Business Entity Type 3           NaN   \n",
              "\n",
              "   EXT_SOURCE_2  EXT_SOURCE_3  APARTMENTS_AVG  BASEMENTAREA_AVG  YEARS_BEGINEXPLUATATION_AVG  \\\n",
              "0      0.397762      0.177704          0.0619            0.0611                       0.9856   \n",
              "1      0.397762      0.177704          0.0619            0.0611                       0.9856   \n",
              "2      0.397762      0.177704          0.0619            0.0611                       0.9856   \n",
              "3      0.397762      0.177704          0.0619            0.0611                       0.9856   \n",
              "4      0.397762      0.177704          0.0619            0.0611                       0.9856   \n",
              "\n",
              "   YEARS_BUILD_AVG  COMMONAREA_AVG  ELEVATORS_AVG  ENTRANCES_AVG  FLOORSMAX_AVG  FLOORSMIN_AVG  \\\n",
              "0           0.8028          0.0086            0.0         0.1379         0.1667         0.2083   \n",
              "1           0.8028          0.0086            0.0         0.1379         0.1667         0.2083   \n",
              "2           0.8028          0.0086            0.0         0.1379         0.1667         0.2083   \n",
              "3           0.8028          0.0086            0.0         0.1379         0.1667         0.2083   \n",
              "4           0.8028          0.0086            0.0         0.1379         0.1667         0.2083   \n",
              "\n",
              "   LANDAREA_AVG  LIVINGAPARTMENTS_AVG  LIVINGAREA_AVG  NONLIVINGAPARTMENTS_AVG  NONLIVINGAREA_AVG  \\\n",
              "0        0.0299                0.0504          0.0519                      0.0                0.0   \n",
              "1        0.0299                0.0504          0.0519                      0.0                0.0   \n",
              "2        0.0299                0.0504          0.0519                      0.0                0.0   \n",
              "3        0.0299                0.0504          0.0519                      0.0                0.0   \n",
              "4        0.0299                0.0504          0.0519                      0.0                0.0   \n",
              "\n",
              "   APARTMENTS_MODE  BASEMENTAREA_MODE  YEARS_BEGINEXPLUATATION_MODE  YEARS_BUILD_MODE  \\\n",
              "0            0.063             0.0634                        0.9856            0.8105   \n",
              "1            0.063             0.0634                        0.9856            0.8105   \n",
              "2            0.063             0.0634                        0.9856            0.8105   \n",
              "3            0.063             0.0634                        0.9856            0.8105   \n",
              "4            0.063             0.0634                        0.9856            0.8105   \n",
              "\n",
              "   COMMONAREA_MODE  ELEVATORS_MODE  ENTRANCES_MODE  FLOORSMAX_MODE  FLOORSMIN_MODE  LANDAREA_MODE  \\\n",
              "0           0.0086             0.0          0.1379          0.1667          0.2083         0.0306   \n",
              "1           0.0086             0.0          0.1379          0.1667          0.2083         0.0306   \n",
              "2           0.0086             0.0          0.1379          0.1667          0.2083         0.0306   \n",
              "3           0.0086             0.0          0.1379          0.1667          0.2083         0.0306   \n",
              "4           0.0086             0.0          0.1379          0.1667          0.2083         0.0306   \n",
              "\n",
              "   LIVINGAPARTMENTS_MODE  LIVINGAREA_MODE  NONLIVINGAPARTMENTS_MODE  NONLIVINGAREA_MODE  \\\n",
              "0                 0.0551           0.0541                       0.0                 0.0   \n",
              "1                 0.0551           0.0541                       0.0                 0.0   \n",
              "2                 0.0551           0.0541                       0.0                 0.0   \n",
              "3                 0.0551           0.0541                       0.0                 0.0   \n",
              "4                 0.0551           0.0541                       0.0                 0.0   \n",
              "\n",
              "   APARTMENTS_MEDI  BASEMENTAREA_MEDI  YEARS_BEGINEXPLUATATION_MEDI  YEARS_BUILD_MEDI  \\\n",
              "0           0.0625             0.0611                        0.9856            0.8054   \n",
              "1           0.0625             0.0611                        0.9856            0.8054   \n",
              "2           0.0625             0.0611                        0.9856            0.8054   \n",
              "3           0.0625             0.0611                        0.9856            0.8054   \n",
              "4           0.0625             0.0611                        0.9856            0.8054   \n",
              "\n",
              "   COMMONAREA_MEDI  ELEVATORS_MEDI  ENTRANCES_MEDI  FLOORSMAX_MEDI  FLOORSMIN_MEDI  LANDAREA_MEDI  \\\n",
              "0           0.0086             0.0          0.1379          0.1667          0.2083         0.0305   \n",
              "1           0.0086             0.0          0.1379          0.1667          0.2083         0.0305   \n",
              "2           0.0086             0.0          0.1379          0.1667          0.2083         0.0305   \n",
              "3           0.0086             0.0          0.1379          0.1667          0.2083         0.0305   \n",
              "4           0.0086             0.0          0.1379          0.1667          0.2083         0.0305   \n",
              "\n",
              "   LIVINGAPARTMENTS_MEDI  LIVINGAREA_MEDI  NONLIVINGAPARTMENTS_MEDI  NONLIVINGAREA_MEDI  \\\n",
              "0                 0.0513           0.0528                       0.0                 0.0   \n",
              "1                 0.0513           0.0528                       0.0                 0.0   \n",
              "2                 0.0513           0.0528                       0.0                 0.0   \n",
              "3                 0.0513           0.0528                       0.0                 0.0   \n",
              "4                 0.0513           0.0528                       0.0                 0.0   \n",
              "\n",
              "  FONDKAPREMONT_MODE  HOUSETYPE_MODE  TOTALAREA_MODE WALLSMATERIAL_MODE EMERGENCYSTATE_MODE  \\\n",
              "0   reg oper account  block of flats          0.0408              Panel                  No   \n",
              "1   reg oper account  block of flats          0.0408              Panel                  No   \n",
              "2   reg oper account  block of flats          0.0408              Panel                  No   \n",
              "3   reg oper account  block of flats          0.0408              Panel                  No   \n",
              "4   reg oper account  block of flats          0.0408              Panel                  No   \n",
              "\n",
              "   OBS_30_CNT_SOCIAL_CIRCLE  DEF_30_CNT_SOCIAL_CIRCLE  OBS_60_CNT_SOCIAL_CIRCLE  \\\n",
              "0                       0.0                       0.0                       0.0   \n",
              "1                       0.0                       0.0                       0.0   \n",
              "2                       0.0                       0.0                       0.0   \n",
              "3                       0.0                       0.0                       0.0   \n",
              "4                       0.0                       0.0                       0.0   \n",
              "\n",
              "   DEF_60_CNT_SOCIAL_CIRCLE  DAYS_LAST_PHONE_CHANGE  FLAG_DOCUMENT_2  FLAG_DOCUMENT_3  \\\n",
              "0                       0.0                 -1755.0                0                1   \n",
              "1                       0.0                 -1755.0                0                1   \n",
              "2                       0.0                 -1755.0                0                1   \n",
              "3                       0.0                 -1755.0                0                1   \n",
              "4                       0.0                 -1755.0                0                1   \n",
              "\n",
              "   FLAG_DOCUMENT_4  FLAG_DOCUMENT_5  FLAG_DOCUMENT_6  FLAG_DOCUMENT_7  FLAG_DOCUMENT_8  \\\n",
              "0                0                0                0                0                0   \n",
              "1                0                0                0                0                0   \n",
              "2                0                0                0                0                0   \n",
              "3                0                0                0                0                0   \n",
              "4                0                0                0                0                0   \n",
              "\n",
              "   FLAG_DOCUMENT_9  FLAG_DOCUMENT_10  FLAG_DOCUMENT_11  FLAG_DOCUMENT_12  FLAG_DOCUMENT_13  \\\n",
              "0                0                 0                 0                 0                 0   \n",
              "1                0                 0                 0                 0                 0   \n",
              "2                0                 0                 0                 0                 0   \n",
              "3                0                 0                 0                 0                 0   \n",
              "4                0                 0                 0                 0                 0   \n",
              "\n",
              "   FLAG_DOCUMENT_14  FLAG_DOCUMENT_15  FLAG_DOCUMENT_16  FLAG_DOCUMENT_17  FLAG_DOCUMENT_18  \\\n",
              "0                 0                 0                 0                 0                 0   \n",
              "1                 0                 0                 0                 0                 0   \n",
              "2                 0                 0                 0                 0                 0   \n",
              "3                 0                 0                 0                 0                 0   \n",
              "4                 0                 0                 0                 0                 0   \n",
              "\n",
              "   FLAG_DOCUMENT_19  FLAG_DOCUMENT_20  FLAG_DOCUMENT_21  AMT_REQ_CREDIT_BUREAU_HOUR  \\\n",
              "0                 0                 0                 0                         0.0   \n",
              "1                 0                 0                 0                         0.0   \n",
              "2                 0                 0                 0                         0.0   \n",
              "3                 0                 0                 0                         0.0   \n",
              "4                 0                 0                 0                         0.0   \n",
              "\n",
              "   AMT_REQ_CREDIT_BUREAU_DAY  AMT_REQ_CREDIT_BUREAU_WEEK  AMT_REQ_CREDIT_BUREAU_MON  \\\n",
              "0                        0.0                         0.0                        0.0   \n",
              "1                        0.0                         0.0                        0.0   \n",
              "2                        0.0                         0.0                        0.0   \n",
              "3                        0.0                         0.0                        0.0   \n",
              "4                        0.0                         0.0                        0.0   \n",
              "\n",
              "   AMT_REQ_CREDIT_BUREAU_QRT  AMT_REQ_CREDIT_BUREAU_YEAR  SK_ID_BUREAU CREDIT_ACTIVE  \\\n",
              "0                        0.0                         0.0     5636127.0        Closed   \n",
              "1                        0.0                         0.0     5636128.0        Closed   \n",
              "2                        0.0                         0.0     5636129.0        Closed   \n",
              "3                        0.0                         0.0     5636130.0        Closed   \n",
              "4                        0.0                         0.0     5636131.0        Active   \n",
              "\n",
              "  CREDIT_CURRENCY  DAYS_CREDIT  CREDIT_DAY_OVERDUE  DAYS_CREDIT_ENDDATE  DAYS_ENDDATE_FACT  \\\n",
              "0      currency 1      -2686.0                 0.0              -1592.0            -1595.0   \n",
              "1      currency 1      -1280.0                 0.0                545.0             -959.0   \n",
              "2      currency 1      -1167.0                 0.0               -954.0             -954.0   \n",
              "3      currency 1       -671.0                 0.0               -306.0             -303.0   \n",
              "4      currency 1       -560.0                 0.0                  NaN                NaN   \n",
              "\n",
              "   AMT_CREDIT_MAX_OVERDUE  CNT_CREDIT_PROLONG  AMT_CREDIT_SUM  AMT_CREDIT_SUM_DEBT  \\\n",
              "0                     NaN                 0.0        720000.0                  0.0   \n",
              "1                     NaN                 0.0       1215000.0                  0.0   \n",
              "2                     NaN                 0.0         78619.5                  0.0   \n",
              "3                     NaN                 0.0        254700.0                  0.0   \n",
              "4                     NaN                 0.0             0.0                  0.0   \n",
              "\n",
              "   AMT_CREDIT_SUM_LIMIT  AMT_CREDIT_SUM_OVERDUE      CREDIT_TYPE  DAYS_CREDIT_UPDATE  \\\n",
              "0                   NaN                     0.0  Consumer credit             -1592.0   \n",
              "1                   NaN                     0.0  Consumer credit              -955.0   \n",
              "2                   NaN                     0.0  Consumer credit              -952.0   \n",
              "3                   NaN                     0.0  Consumer credit              -303.0   \n",
              "4                   NaN                     0.0      Credit card              -226.0   \n",
              "\n",
              "   AMT_ANNUITY_y  \n",
              "0            NaN  \n",
              "1            NaN  \n",
              "2            NaN  \n",
              "3            NaN  \n",
              "4            NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3b45c8ac-e8c3-47da-b724-8c5fdcdae3ab\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SK_ID_CURR</th>\n",
              "      <th>TARGET</th>\n",
              "      <th>NAME_CONTRACT_TYPE</th>\n",
              "      <th>CODE_GENDER</th>\n",
              "      <th>FLAG_OWN_CAR</th>\n",
              "      <th>FLAG_OWN_REALTY</th>\n",
              "      <th>CNT_CHILDREN</th>\n",
              "      <th>AMT_INCOME_TOTAL</th>\n",
              "      <th>AMT_CREDIT</th>\n",
              "      <th>AMT_ANNUITY_x</th>\n",
              "      <th>AMT_GOODS_PRICE</th>\n",
              "      <th>NAME_TYPE_SUITE</th>\n",
              "      <th>NAME_INCOME_TYPE</th>\n",
              "      <th>NAME_EDUCATION_TYPE</th>\n",
              "      <th>NAME_FAMILY_STATUS</th>\n",
              "      <th>NAME_HOUSING_TYPE</th>\n",
              "      <th>REGION_POPULATION_RELATIVE</th>\n",
              "      <th>DAYS_BIRTH</th>\n",
              "      <th>DAYS_EMPLOYED</th>\n",
              "      <th>DAYS_REGISTRATION</th>\n",
              "      <th>DAYS_ID_PUBLISH</th>\n",
              "      <th>OWN_CAR_AGE</th>\n",
              "      <th>FLAG_MOBIL</th>\n",
              "      <th>FLAG_EMP_PHONE</th>\n",
              "      <th>FLAG_WORK_PHONE</th>\n",
              "      <th>FLAG_CONT_MOBILE</th>\n",
              "      <th>FLAG_PHONE</th>\n",
              "      <th>FLAG_EMAIL</th>\n",
              "      <th>OCCUPATION_TYPE</th>\n",
              "      <th>CNT_FAM_MEMBERS</th>\n",
              "      <th>REGION_RATING_CLIENT</th>\n",
              "      <th>REGION_RATING_CLIENT_W_CITY</th>\n",
              "      <th>WEEKDAY_APPR_PROCESS_START</th>\n",
              "      <th>HOUR_APPR_PROCESS_START</th>\n",
              "      <th>REG_REGION_NOT_LIVE_REGION</th>\n",
              "      <th>REG_REGION_NOT_WORK_REGION</th>\n",
              "      <th>LIVE_REGION_NOT_WORK_REGION</th>\n",
              "      <th>REG_CITY_NOT_LIVE_CITY</th>\n",
              "      <th>REG_CITY_NOT_WORK_CITY</th>\n",
              "      <th>LIVE_CITY_NOT_WORK_CITY</th>\n",
              "      <th>ORGANIZATION_TYPE</th>\n",
              "      <th>EXT_SOURCE_1</th>\n",
              "      <th>EXT_SOURCE_2</th>\n",
              "      <th>EXT_SOURCE_3</th>\n",
              "      <th>APARTMENTS_AVG</th>\n",
              "      <th>BASEMENTAREA_AVG</th>\n",
              "      <th>YEARS_BEGINEXPLUATATION_AVG</th>\n",
              "      <th>YEARS_BUILD_AVG</th>\n",
              "      <th>COMMONAREA_AVG</th>\n",
              "      <th>ELEVATORS_AVG</th>\n",
              "      <th>ENTRANCES_AVG</th>\n",
              "      <th>FLOORSMAX_AVG</th>\n",
              "      <th>FLOORSMIN_AVG</th>\n",
              "      <th>LANDAREA_AVG</th>\n",
              "      <th>LIVINGAPARTMENTS_AVG</th>\n",
              "      <th>LIVINGAREA_AVG</th>\n",
              "      <th>NONLIVINGAPARTMENTS_AVG</th>\n",
              "      <th>NONLIVINGAREA_AVG</th>\n",
              "      <th>APARTMENTS_MODE</th>\n",
              "      <th>BASEMENTAREA_MODE</th>\n",
              "      <th>YEARS_BEGINEXPLUATATION_MODE</th>\n",
              "      <th>YEARS_BUILD_MODE</th>\n",
              "      <th>COMMONAREA_MODE</th>\n",
              "      <th>ELEVATORS_MODE</th>\n",
              "      <th>ENTRANCES_MODE</th>\n",
              "      <th>FLOORSMAX_MODE</th>\n",
              "      <th>FLOORSMIN_MODE</th>\n",
              "      <th>LANDAREA_MODE</th>\n",
              "      <th>LIVINGAPARTMENTS_MODE</th>\n",
              "      <th>LIVINGAREA_MODE</th>\n",
              "      <th>NONLIVINGAPARTMENTS_MODE</th>\n",
              "      <th>NONLIVINGAREA_MODE</th>\n",
              "      <th>APARTMENTS_MEDI</th>\n",
              "      <th>BASEMENTAREA_MEDI</th>\n",
              "      <th>YEARS_BEGINEXPLUATATION_MEDI</th>\n",
              "      <th>YEARS_BUILD_MEDI</th>\n",
              "      <th>COMMONAREA_MEDI</th>\n",
              "      <th>ELEVATORS_MEDI</th>\n",
              "      <th>ENTRANCES_MEDI</th>\n",
              "      <th>FLOORSMAX_MEDI</th>\n",
              "      <th>FLOORSMIN_MEDI</th>\n",
              "      <th>LANDAREA_MEDI</th>\n",
              "      <th>LIVINGAPARTMENTS_MEDI</th>\n",
              "      <th>LIVINGAREA_MEDI</th>\n",
              "      <th>NONLIVINGAPARTMENTS_MEDI</th>\n",
              "      <th>NONLIVINGAREA_MEDI</th>\n",
              "      <th>FONDKAPREMONT_MODE</th>\n",
              "      <th>HOUSETYPE_MODE</th>\n",
              "      <th>TOTALAREA_MODE</th>\n",
              "      <th>WALLSMATERIAL_MODE</th>\n",
              "      <th>EMERGENCYSTATE_MODE</th>\n",
              "      <th>OBS_30_CNT_SOCIAL_CIRCLE</th>\n",
              "      <th>DEF_30_CNT_SOCIAL_CIRCLE</th>\n",
              "      <th>OBS_60_CNT_SOCIAL_CIRCLE</th>\n",
              "      <th>DEF_60_CNT_SOCIAL_CIRCLE</th>\n",
              "      <th>DAYS_LAST_PHONE_CHANGE</th>\n",
              "      <th>FLAG_DOCUMENT_2</th>\n",
              "      <th>FLAG_DOCUMENT_3</th>\n",
              "      <th>FLAG_DOCUMENT_4</th>\n",
              "      <th>FLAG_DOCUMENT_5</th>\n",
              "      <th>FLAG_DOCUMENT_6</th>\n",
              "      <th>FLAG_DOCUMENT_7</th>\n",
              "      <th>FLAG_DOCUMENT_8</th>\n",
              "      <th>FLAG_DOCUMENT_9</th>\n",
              "      <th>FLAG_DOCUMENT_10</th>\n",
              "      <th>FLAG_DOCUMENT_11</th>\n",
              "      <th>FLAG_DOCUMENT_12</th>\n",
              "      <th>FLAG_DOCUMENT_13</th>\n",
              "      <th>FLAG_DOCUMENT_14</th>\n",
              "      <th>FLAG_DOCUMENT_15</th>\n",
              "      <th>FLAG_DOCUMENT_16</th>\n",
              "      <th>FLAG_DOCUMENT_17</th>\n",
              "      <th>FLAG_DOCUMENT_18</th>\n",
              "      <th>FLAG_DOCUMENT_19</th>\n",
              "      <th>FLAG_DOCUMENT_20</th>\n",
              "      <th>FLAG_DOCUMENT_21</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_HOUR</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_DAY</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_WEEK</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_MON</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_QRT</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_YEAR</th>\n",
              "      <th>SK_ID_BUREAU</th>\n",
              "      <th>CREDIT_ACTIVE</th>\n",
              "      <th>CREDIT_CURRENCY</th>\n",
              "      <th>DAYS_CREDIT</th>\n",
              "      <th>CREDIT_DAY_OVERDUE</th>\n",
              "      <th>DAYS_CREDIT_ENDDATE</th>\n",
              "      <th>DAYS_ENDDATE_FACT</th>\n",
              "      <th>AMT_CREDIT_MAX_OVERDUE</th>\n",
              "      <th>CNT_CREDIT_PROLONG</th>\n",
              "      <th>AMT_CREDIT_SUM</th>\n",
              "      <th>AMT_CREDIT_SUM_DEBT</th>\n",
              "      <th>AMT_CREDIT_SUM_LIMIT</th>\n",
              "      <th>AMT_CREDIT_SUM_OVERDUE</th>\n",
              "      <th>CREDIT_TYPE</th>\n",
              "      <th>DAYS_CREDIT_UPDATE</th>\n",
              "      <th>AMT_ANNUITY_y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>410704</td>\n",
              "      <td>0</td>\n",
              "      <td>Cash loans</td>\n",
              "      <td>F</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "      <td>1</td>\n",
              "      <td>157500.0</td>\n",
              "      <td>900000.0</td>\n",
              "      <td>26446.5</td>\n",
              "      <td>900000.0</td>\n",
              "      <td>Unaccompanied</td>\n",
              "      <td>Working</td>\n",
              "      <td>Secondary / secondary special</td>\n",
              "      <td>Married</td>\n",
              "      <td>House / apartment</td>\n",
              "      <td>0.010006</td>\n",
              "      <td>-16180</td>\n",
              "      <td>-2037</td>\n",
              "      <td>-3722.0</td>\n",
              "      <td>-3495</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>WEDNESDAY</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Business Entity Type 3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.397762</td>\n",
              "      <td>0.177704</td>\n",
              "      <td>0.0619</td>\n",
              "      <td>0.0611</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8028</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0299</td>\n",
              "      <td>0.0504</td>\n",
              "      <td>0.0519</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.063</td>\n",
              "      <td>0.0634</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8105</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0306</td>\n",
              "      <td>0.0551</td>\n",
              "      <td>0.0541</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0625</td>\n",
              "      <td>0.0611</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8054</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0305</td>\n",
              "      <td>0.0513</td>\n",
              "      <td>0.0528</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>reg oper account</td>\n",
              "      <td>block of flats</td>\n",
              "      <td>0.0408</td>\n",
              "      <td>Panel</td>\n",
              "      <td>No</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-1755.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5636127.0</td>\n",
              "      <td>Closed</td>\n",
              "      <td>currency 1</td>\n",
              "      <td>-2686.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-1592.0</td>\n",
              "      <td>-1595.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>720000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Consumer credit</td>\n",
              "      <td>-1592.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>410704</td>\n",
              "      <td>0</td>\n",
              "      <td>Cash loans</td>\n",
              "      <td>F</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "      <td>1</td>\n",
              "      <td>157500.0</td>\n",
              "      <td>900000.0</td>\n",
              "      <td>26446.5</td>\n",
              "      <td>900000.0</td>\n",
              "      <td>Unaccompanied</td>\n",
              "      <td>Working</td>\n",
              "      <td>Secondary / secondary special</td>\n",
              "      <td>Married</td>\n",
              "      <td>House / apartment</td>\n",
              "      <td>0.010006</td>\n",
              "      <td>-16180</td>\n",
              "      <td>-2037</td>\n",
              "      <td>-3722.0</td>\n",
              "      <td>-3495</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>WEDNESDAY</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Business Entity Type 3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.397762</td>\n",
              "      <td>0.177704</td>\n",
              "      <td>0.0619</td>\n",
              "      <td>0.0611</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8028</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0299</td>\n",
              "      <td>0.0504</td>\n",
              "      <td>0.0519</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.063</td>\n",
              "      <td>0.0634</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8105</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0306</td>\n",
              "      <td>0.0551</td>\n",
              "      <td>0.0541</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0625</td>\n",
              "      <td>0.0611</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8054</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0305</td>\n",
              "      <td>0.0513</td>\n",
              "      <td>0.0528</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>reg oper account</td>\n",
              "      <td>block of flats</td>\n",
              "      <td>0.0408</td>\n",
              "      <td>Panel</td>\n",
              "      <td>No</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-1755.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5636128.0</td>\n",
              "      <td>Closed</td>\n",
              "      <td>currency 1</td>\n",
              "      <td>-1280.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>545.0</td>\n",
              "      <td>-959.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1215000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Consumer credit</td>\n",
              "      <td>-955.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>410704</td>\n",
              "      <td>0</td>\n",
              "      <td>Cash loans</td>\n",
              "      <td>F</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "      <td>1</td>\n",
              "      <td>157500.0</td>\n",
              "      <td>900000.0</td>\n",
              "      <td>26446.5</td>\n",
              "      <td>900000.0</td>\n",
              "      <td>Unaccompanied</td>\n",
              "      <td>Working</td>\n",
              "      <td>Secondary / secondary special</td>\n",
              "      <td>Married</td>\n",
              "      <td>House / apartment</td>\n",
              "      <td>0.010006</td>\n",
              "      <td>-16180</td>\n",
              "      <td>-2037</td>\n",
              "      <td>-3722.0</td>\n",
              "      <td>-3495</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>WEDNESDAY</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Business Entity Type 3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.397762</td>\n",
              "      <td>0.177704</td>\n",
              "      <td>0.0619</td>\n",
              "      <td>0.0611</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8028</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0299</td>\n",
              "      <td>0.0504</td>\n",
              "      <td>0.0519</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.063</td>\n",
              "      <td>0.0634</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8105</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0306</td>\n",
              "      <td>0.0551</td>\n",
              "      <td>0.0541</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0625</td>\n",
              "      <td>0.0611</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8054</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0305</td>\n",
              "      <td>0.0513</td>\n",
              "      <td>0.0528</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>reg oper account</td>\n",
              "      <td>block of flats</td>\n",
              "      <td>0.0408</td>\n",
              "      <td>Panel</td>\n",
              "      <td>No</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-1755.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5636129.0</td>\n",
              "      <td>Closed</td>\n",
              "      <td>currency 1</td>\n",
              "      <td>-1167.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-954.0</td>\n",
              "      <td>-954.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>78619.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Consumer credit</td>\n",
              "      <td>-952.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>410704</td>\n",
              "      <td>0</td>\n",
              "      <td>Cash loans</td>\n",
              "      <td>F</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "      <td>1</td>\n",
              "      <td>157500.0</td>\n",
              "      <td>900000.0</td>\n",
              "      <td>26446.5</td>\n",
              "      <td>900000.0</td>\n",
              "      <td>Unaccompanied</td>\n",
              "      <td>Working</td>\n",
              "      <td>Secondary / secondary special</td>\n",
              "      <td>Married</td>\n",
              "      <td>House / apartment</td>\n",
              "      <td>0.010006</td>\n",
              "      <td>-16180</td>\n",
              "      <td>-2037</td>\n",
              "      <td>-3722.0</td>\n",
              "      <td>-3495</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>WEDNESDAY</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Business Entity Type 3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.397762</td>\n",
              "      <td>0.177704</td>\n",
              "      <td>0.0619</td>\n",
              "      <td>0.0611</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8028</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0299</td>\n",
              "      <td>0.0504</td>\n",
              "      <td>0.0519</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.063</td>\n",
              "      <td>0.0634</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8105</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0306</td>\n",
              "      <td>0.0551</td>\n",
              "      <td>0.0541</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0625</td>\n",
              "      <td>0.0611</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8054</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0305</td>\n",
              "      <td>0.0513</td>\n",
              "      <td>0.0528</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>reg oper account</td>\n",
              "      <td>block of flats</td>\n",
              "      <td>0.0408</td>\n",
              "      <td>Panel</td>\n",
              "      <td>No</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-1755.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5636130.0</td>\n",
              "      <td>Closed</td>\n",
              "      <td>currency 1</td>\n",
              "      <td>-671.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-306.0</td>\n",
              "      <td>-303.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>254700.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Consumer credit</td>\n",
              "      <td>-303.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>410704</td>\n",
              "      <td>0</td>\n",
              "      <td>Cash loans</td>\n",
              "      <td>F</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "      <td>1</td>\n",
              "      <td>157500.0</td>\n",
              "      <td>900000.0</td>\n",
              "      <td>26446.5</td>\n",
              "      <td>900000.0</td>\n",
              "      <td>Unaccompanied</td>\n",
              "      <td>Working</td>\n",
              "      <td>Secondary / secondary special</td>\n",
              "      <td>Married</td>\n",
              "      <td>House / apartment</td>\n",
              "      <td>0.010006</td>\n",
              "      <td>-16180</td>\n",
              "      <td>-2037</td>\n",
              "      <td>-3722.0</td>\n",
              "      <td>-3495</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>WEDNESDAY</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Business Entity Type 3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.397762</td>\n",
              "      <td>0.177704</td>\n",
              "      <td>0.0619</td>\n",
              "      <td>0.0611</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8028</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0299</td>\n",
              "      <td>0.0504</td>\n",
              "      <td>0.0519</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.063</td>\n",
              "      <td>0.0634</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8105</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0306</td>\n",
              "      <td>0.0551</td>\n",
              "      <td>0.0541</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0625</td>\n",
              "      <td>0.0611</td>\n",
              "      <td>0.9856</td>\n",
              "      <td>0.8054</td>\n",
              "      <td>0.0086</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.1379</td>\n",
              "      <td>0.1667</td>\n",
              "      <td>0.2083</td>\n",
              "      <td>0.0305</td>\n",
              "      <td>0.0513</td>\n",
              "      <td>0.0528</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>reg oper account</td>\n",
              "      <td>block of flats</td>\n",
              "      <td>0.0408</td>\n",
              "      <td>Panel</td>\n",
              "      <td>No</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-1755.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5636131.0</td>\n",
              "      <td>Active</td>\n",
              "      <td>currency 1</td>\n",
              "      <td>-560.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Credit card</td>\n",
              "      <td>-226.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b45c8ac-e8c3-47da-b724-8c5fdcdae3ab')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3b45c8ac-e8c3-47da-b724-8c5fdcdae3ab button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3b45c8ac-e8c3-47da-b724-8c5fdcdae3ab');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-eb480d1c-1b96-4ba3-8183-c7337b729626\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eb480d1c-1b96-4ba3-8183-c7337b729626')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-eb480d1c-1b96-4ba3-8183-c7337b729626 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "merged_df"
            }
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Now , I am checking the number of missing values in each column of the merged dataset."
      ],
      "metadata": {
        "id": "Y-2b6Ki09xpQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculating the number of missing values and their percentage\n",
        "nann_values= merged_df.isnull().sum()\n",
        "nann_values_percent= 100*merged_df.isnull().sum()/len(merged_df)\n",
        "\n",
        "# Combining the two series into a DataFrame\n",
        "nann_values_table= pd.concat([nann_values,nann_values_percent],axis=1)\n",
        "\n",
        "# Renaming the columns\n",
        "nann_values_table_ren_colum= nann_values_table.rename(columns={0:'Missing Values' , 1:'% of Total Values'})\n",
        "\n",
        "# Filtering out columns with 0% missing values and sort by percentage of missing values.\n",
        "nann_values_table_ren_colum=nann_values_table_ren_colum[nann_values_table_ren_colum.iloc[:,1]!=0].sort_values('% of Total Values',ascending =False).round(1)\n",
        "\n",
        "# Adjusting Pandas to display settings\n",
        "pd.set_option('display.max_rows', None)  # Show all rows\n",
        "pd.set_option('display.max_columns', None)  # Show all columns\n",
        "pd.set_option('display.width', None)  # Auto-detect the width of the display\n",
        "pd.set_option('display.max_colwidth', None)  # Show full column content\n",
        "\n",
        "# Displaying  the table\n",
        "print(nann_values_table_ren_colum)"
      ],
      "metadata": {
        "id": "ICExDOFF-CMC",
        "outputId": "4dc9ce1d-b6db-46c9-d068-1735c8134c44",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                              Missing Values  % of Total Values\n",
            "AMT_ANNUITY_y                         588330               77.9\n",
            "COMMONAREA_AVG                        514960               68.2\n",
            "COMMONAREA_MODE                       514960               68.2\n",
            "COMMONAREA_MEDI                       514960               68.2\n",
            "NONLIVINGAPARTMENTS_MODE              511885               67.8\n",
            "NONLIVINGAPARTMENTS_AVG               511885               67.8\n",
            "NONLIVINGAPARTMENTS_MEDI              511885               67.8\n",
            "LIVINGAPARTMENTS_MODE                 503190               66.6\n",
            "LIVINGAPARTMENTS_MEDI                 503190               66.6\n",
            "LIVINGAPARTMENTS_AVG                  503190               66.6\n",
            "FONDKAPREMONT_MODE                    503101               66.6\n",
            "FLOORSMIN_MODE                        499535               66.1\n",
            "FLOORSMIN_AVG                         499535               66.1\n",
            "FLOORSMIN_MEDI                        499535               66.1\n",
            "AMT_CREDIT_MAX_OVERDUE                497161               65.8\n",
            "YEARS_BUILD_MEDI                      488257               64.7\n",
            "YEARS_BUILD_AVG                       488257               64.7\n",
            "YEARS_BUILD_MODE                      488257               64.7\n",
            "OWN_CAR_AGE                           483347               64.0\n",
            "LANDAREA_MODE                         430364               57.0\n",
            "LANDAREA_MEDI                         430364               57.0\n",
            "LANDAREA_AVG                          430364               57.0\n",
            "BASEMENTAREA_MODE                     423882               56.1\n",
            "BASEMENTAREA_MEDI                     423882               56.1\n",
            "BASEMENTAREA_AVG                      423882               56.1\n",
            "EXT_SOURCE_1                          405375               53.7\n",
            "NONLIVINGAREA_MODE                    398863               52.8\n",
            "NONLIVINGAREA_AVG                     398863               52.8\n",
            "NONLIVINGAREA_MEDI                    398863               52.8\n",
            "ELEVATORS_AVG                         384503               50.9\n",
            "ELEVATORS_MEDI                        384503               50.9\n",
            "ELEVATORS_MODE                        384503               50.9\n",
            "APARTMENTS_MODE                       365508               48.4\n",
            "APARTMENTS_AVG                        365508               48.4\n",
            "APARTMENTS_MEDI                       365508               48.4\n",
            "WALLSMATERIAL_MODE                    365043               48.3\n",
            "ENTRANCES_MEDI                        361220               47.8\n",
            "ENTRANCES_MODE                        361220               47.8\n",
            "ENTRANCES_AVG                         361220               47.8\n",
            "HOUSETYPE_MODE                        360447               47.7\n",
            "LIVINGAREA_MODE                       360066               47.7\n",
            "LIVINGAREA_AVG                        360066               47.7\n",
            "LIVINGAREA_MEDI                       360066               47.7\n",
            "FLOORSMAX_MODE                        356929               47.3\n",
            "FLOORSMAX_MEDI                        356929               47.3\n",
            "FLOORSMAX_AVG                         356929               47.3\n",
            "YEARS_BEGINEXPLUATATION_MEDI          349724               46.3\n",
            "YEARS_BEGINEXPLUATATION_MODE          349724               46.3\n",
            "YEARS_BEGINEXPLUATATION_AVG           349724               46.3\n",
            "TOTALAREA_MODE                        345994               45.8\n",
            "EMERGENCYSTATE_MODE                   339439               44.9\n",
            "DAYS_ENDDATE_FACT                     294174               39.0\n",
            "AMT_CREDIT_SUM_LIMIT                  267596               35.4\n",
            "OCCUPATION_TYPE                       234321               31.0\n",
            "AMT_CREDIT_SUM_DEBT                   134044               17.7\n",
            "DAYS_CREDIT_ENDDATE                    66969                8.9\n",
            "EXT_SOURCE_3                           43758                5.8\n",
            "AMT_CREDIT_SUM                         22086                2.9\n",
            "CREDIT_CURRENCY                        22085                2.9\n",
            "SK_ID_BUREAU                           22085                2.9\n",
            "AMT_CREDIT_SUM_OVERDUE                 22085                2.9\n",
            "CNT_CREDIT_PROLONG                     22085                2.9\n",
            "CREDIT_DAY_OVERDUE                     22085                2.9\n",
            "DAYS_CREDIT                            22085                2.9\n",
            "DAYS_CREDIT_UPDATE                     22085                2.9\n",
            "CREDIT_ACTIVE                          22085                2.9\n",
            "CREDIT_TYPE                            22085                2.9\n",
            "AMT_REQ_CREDIT_BUREAU_YEAR             20833                2.8\n",
            "AMT_REQ_CREDIT_BUREAU_QRT              20833                2.8\n",
            "AMT_REQ_CREDIT_BUREAU_MON              20833                2.8\n",
            "AMT_REQ_CREDIT_BUREAU_WEEK             20833                2.8\n",
            "AMT_REQ_CREDIT_BUREAU_DAY              20833                2.8\n",
            "AMT_REQ_CREDIT_BUREAU_HOUR             20833                2.8\n",
            "NAME_TYPE_SUITE                         2980                0.4\n",
            "DEF_60_CNT_SOCIAL_CIRCLE                2194                0.3\n",
            "OBS_60_CNT_SOCIAL_CIRCLE                2194                0.3\n",
            "DEF_30_CNT_SOCIAL_CIRCLE                2194                0.3\n",
            "OBS_30_CNT_SOCIAL_CIRCLE                2194                0.3\n",
            "EXT_SOURCE_2                            1084                0.1\n",
            "AMT_GOODS_PRICE                          599                0.1\n",
            "AMT_ANNUITY_x                             20                0.0\n",
            "CNT_FAM_MEMBERS                            1                0.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Verifying the number of counts values per type.\n",
        "merged_df.dtypes.value_counts()"
      ],
      "metadata": {
        "id": "l57F9QS2-P8F",
        "outputId": "8d02d318-42d1-4b2e-8fd7-ee3cd2bec2a3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "float64    78\n",
              "int64      41\n",
              "object     19\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Among the provided variables or features in the merged data. There are a total of 78 decimals, 41 integers, and 19 categorical."
      ],
      "metadata": {
        "id": "b6bUQI7v-V15"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "merged_df.select_dtypes('object').nunique() # Checking the number of unique values for categorical variables."
      ],
      "metadata": {
        "id": "ouh4CFp3-4gW",
        "outputId": "582b8506-4baf-4661-f188-4a7a92f74c9c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "NAME_CONTRACT_TYPE             2\n",
              "CODE_GENDER                    2\n",
              "FLAG_OWN_CAR                   2\n",
              "FLAG_OWN_REALTY                2\n",
              "NAME_TYPE_SUITE                7\n",
              "NAME_INCOME_TYPE               8\n",
              "NAME_EDUCATION_TYPE            5\n",
              "NAME_FAMILY_STATUS             6\n",
              "NAME_HOUSING_TYPE              6\n",
              "OCCUPATION_TYPE               18\n",
              "WEEKDAY_APPR_PROCESS_START     7\n",
              "ORGANIZATION_TYPE             58\n",
              "FONDKAPREMONT_MODE             4\n",
              "HOUSETYPE_MODE                 3\n",
              "WALLSMATERIAL_MODE             7\n",
              "EMERGENCYSTATE_MODE            2\n",
              "CREDIT_ACTIVE                  4\n",
              "CREDIT_CURRENCY                4\n",
              "CREDIT_TYPE                   15\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Except for ORGANIZATION_TYPE AND OCCUPATION_TYPE and CREDIT_TYPE the rest of the categorical variables has fewer unique values."
      ],
      "metadata": {
        "id": "E8vJO0q7_EJO"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Now, I am Interpolating missing values by applying \"Cubic\" interpolation. Cubic interpolation creates a smooth curve through the existing data points, which can be more accurate than linear interpolation.\n",
        "For continuity, it ensures that the first and second derivatives of the interpolated curve are continuous, providing a more natural fit for many types of data."
      ],
      "metadata": {
        "id": "Uagk39ug_Nog"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "merged_df= merged_df.fillna(0)"
      ],
      "metadata": {
        "id": "OmYh7eEp_Rs6"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for col in merged_df.columns:\n",
        "    if merged_df[col].isna().any():\n",
        "        merged_df[col] = merged_df[col].interpolate(method='cubic')"
      ],
      "metadata": {
        "id": "yAR2jiPU_VOw"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Checking the number of missing values after interpolation.\n",
        "# Calculating the number of missing values and their percentage\n",
        "nann_values= merged_df.isnull().sum()\n",
        "nann_values_percent= 100*merged_df.isnull().sum()/len(merged_df)\n",
        "\n",
        "# Combining the two series into a DataFrame\n",
        "nann_values_table= pd.concat([nann_values,nann_values_percent],axis=1)\n",
        "\n",
        "# Renaming the columns\n",
        "nann_values_table_ren_colum= nann_values_table.rename(columns={0:'Missing Values' , 1:'% of Total Values'})\n",
        "\n",
        "# Filtering out columns with 0% missing values and sort by percentage of missing values.\n",
        "nann_values_table_ren_colum=nann_values_table_ren_colum[nann_values_table_ren_colum.iloc[:,1]!=0].sort_values('% of Total Values',ascending =False).round(1)\n",
        "\n",
        "# Adjusting Pandas to display settings\n",
        "pd.set_option('display.max_rows', None)  # Show all rows\n",
        "pd.set_option('display.max_columns', None)  # Show all columns\n",
        "pd.set_option('display.width', None)  # Auto-detect the width of the display\n",
        "pd.set_option('display.max_colwidth', None)  # Show full column content\n",
        "\n",
        "# Displaying  the table\n",
        "print(nann_values_table_ren_colum)"
      ],
      "metadata": {
        "id": "qD4oBAzN_dHw",
        "outputId": "f32d088a-ee30-4ddb-ee77-b701172ab111",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Empty DataFrame\n",
            "Columns: [Missing Values, % of Total Values]\n",
            "Index: []\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Machine learning models cannot handle categorical variables directly, so these \"19\" categorical variables need to be encoded. Next, I am going to use two methods: label encoding, which converts individual values of categorical variables into numbers without creating new columns. This is only for the categorical variables that have two values only. In our datasets, we have examples of columns like CODE_GENDER. Another method is One-Hot Encoding, which adds new features based on types of feature values. Here, only one column corresponding to each unique value is marked as \"1\", and the rest are marked as \"0\"."
      ],
      "metadata": {
        "id": "z57ulCJe_nqU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "le = LabelEncoder()\n",
        "le_counts = 0\n",
        "\n",
        "for col in merged_df:\n",
        "    if merged_df[col].dtype=='object':\n",
        "        if len(list(merged_df[col].unique()))<=2:\n",
        "            le.fit(merged_df[col])\n",
        "\n",
        "            merged_df[col]=le.transform(merged_df[col])\n",
        "\n",
        "            le_counts+=1\n",
        "\n",
        "print('%d columns were label encoded, ' % le_counts)"
      ],
      "metadata": {
        "id": "pWGv92Mn_4dV",
        "outputId": "b235707b-1677-4724-afdd-25ceee28031d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "4 columns were label encoded, \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "merged_df = pd.get_dummies(merged_df)\n",
        "print('Merged dataset Features shape:', merged_df.shape)"
      ],
      "metadata": {
        "id": "X0kFwc1PAQxq",
        "outputId": "3468256f-9023-49e8-8dbb-540ccfcbc498",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Merged dataset Features shape: (755182, 286)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating copies of the original data.\n",
        "merged_df2= merged_df.copy()\n",
        "merged_df3= merged_df.copy()"
      ],
      "metadata": {
        "id": "Q82UgryDAg7x"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Exploratory Data Analysis."
      ],
      "metadata": {
        "id": "qHhlLw81AyDS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "merged_df.info()"
      ],
      "metadata": {
        "id": "gbFZ7kEdBldI",
        "outputId": "9fd7beb5-6494-445f-e576-07e46b74ea20",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 755182 entries, 0 to 755181\n",
            "Columns: 286 entries, SK_ID_CURR to CREDIT_TYPE_Unknown type of loan\n",
            "dtypes: bool(163), float64(78), int64(45)\n",
            "memory usage: 826.1 MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "merged_df.describe()"
      ],
      "metadata": {
        "id": "mujn6kPMBtcD",
        "outputId": "16548b89-83cd-43e0-8529-8bf957d433a3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        }
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          SK_ID_CURR         TARGET  NAME_CONTRACT_TYPE    CODE_GENDER   FLAG_OWN_CAR  \\\n",
              "count  755182.000000  755182.000000       755182.000000  755182.000000  755182.000000   \n",
              "mean   278150.694332       0.078794            0.087473       0.319506       0.359986   \n",
              "std    102843.790629       0.269418            0.282527       0.466285       0.479996   \n",
              "min    100004.000000       0.000000            0.000000       0.000000       0.000000   \n",
              "25%    188680.000000       0.000000            0.000000       0.000000       0.000000   \n",
              "50%    278195.000000       0.000000            0.000000       0.000000       0.000000   \n",
              "75%    367007.000000       0.000000            0.000000       1.000000       1.000000   \n",
              "max    456255.000000       1.000000            1.000000       1.000000       1.000000   \n",
              "\n",
              "       FLAG_OWN_REALTY   CNT_CHILDREN  AMT_INCOME_TOTAL    AMT_CREDIT  AMT_ANNUITY_x  \\\n",
              "count    755182.000000  755182.000000      7.551820e+05  7.551820e+05  755182.000000   \n",
              "mean          0.695456       0.426571      1.803473e+05  6.203523e+05   27372.661068   \n",
              "std           0.460214       0.726381      2.943765e+05  4.083272e+05   14253.934702   \n",
              "min           0.000000       0.000000      2.565000e+04  4.500000e+04       0.000000   \n",
              "25%           0.000000       0.000000      1.125000e+05  2.842560e+05   16875.000000   \n",
              "50%           1.000000       0.000000      1.575000e+05  5.342040e+05   25317.000000   \n",
              "75%           1.000000       1.000000      2.250000e+05  8.353800e+05   35028.000000   \n",
              "max           1.000000      19.000000      1.170000e+08  4.050000e+06  230161.500000   \n",
              "\n",
              "       AMT_GOODS_PRICE  REGION_POPULATION_RELATIVE     DAYS_BIRTH  DAYS_EMPLOYED  \\\n",
              "count     7.551820e+05               755182.000000  755182.000000  755182.000000   \n",
              "mean      5.586452e+05                    0.020372  -16276.529247   61672.284102   \n",
              "std       3.757229e+05                    0.013243    4184.679939  139790.617016   \n",
              "min       0.000000e+00                    0.000290  -25201.000000  -17583.000000   \n",
              "25%       2.475000e+05                    0.010006  -19777.000000   -3147.000000   \n",
              "50%       4.545000e+05                    0.018801  -15917.000000   -1461.000000   \n",
              "75%       7.020000e+05                    0.026392  -12866.000000    -356.000000   \n",
              "max       4.050000e+06                    0.072508   -7678.000000  365243.000000   \n",
              "\n",
              "       DAYS_REGISTRATION  DAYS_ID_PUBLISH    OWN_CAR_AGE  FLAG_MOBIL  FLAG_EMP_PHONE  \\\n",
              "count      755182.000000    755182.000000  755182.000000    755182.0   755182.000000   \n",
              "mean        -4950.633514     -3136.577662       4.291735         1.0        0.825010   \n",
              "std          3503.434351      1468.176801       9.408946         0.0        0.379958   \n",
              "min        -24672.000000     -6383.000000       0.000000         1.0        0.000000   \n",
              "25%         -7417.000000     -4355.000000       0.000000         1.0        1.000000   \n",
              "50%         -4475.000000     -3464.000000       0.000000         1.0        1.000000   \n",
              "75%         -1980.000000     -1972.000000       6.000000         1.0        1.000000   \n",
              "max             0.000000         0.000000      91.000000         1.0        1.000000   \n",
              "\n",
              "       FLAG_WORK_PHONE  FLAG_CONT_MOBILE     FLAG_PHONE     FLAG_EMAIL  CNT_FAM_MEMBERS  \\\n",
              "count    755182.000000     755182.000000  755182.000000  755182.000000    755182.000000   \n",
              "mean          0.200677          0.998256       0.301376       0.063322         2.177315   \n",
              "std           0.400507          0.041724       0.458856       0.243542         0.906289   \n",
              "min           0.000000          0.000000       0.000000       0.000000         0.000000   \n",
              "25%           0.000000          1.000000       0.000000       0.000000         2.000000   \n",
              "50%           0.000000          1.000000       0.000000       0.000000         2.000000   \n",
              "75%           0.000000          1.000000       1.000000       0.000000         3.000000   \n",
              "max           1.000000          1.000000       1.000000       1.000000        20.000000   \n",
              "\n",
              "       REGION_RATING_CLIENT  REGION_RATING_CLIENT_W_CITY  HOUR_APPR_PROCESS_START  \\\n",
              "count         755182.000000                755182.000000            755182.000000   \n",
              "mean               2.075196                     2.055363                12.038522   \n",
              "std                0.499602                     0.494808                 3.274080   \n",
              "min                1.000000                     1.000000                 0.000000   \n",
              "25%                2.000000                     2.000000                10.000000   \n",
              "50%                2.000000                     2.000000                12.000000   \n",
              "75%                2.000000                     2.000000                14.000000   \n",
              "max                3.000000                     3.000000                23.000000   \n",
              "\n",
              "       REG_REGION_NOT_LIVE_REGION  REG_REGION_NOT_WORK_REGION  LIVE_REGION_NOT_WORK_REGION  \\\n",
              "count               755182.000000               755182.000000                755182.000000   \n",
              "mean                     0.012137                    0.044217                     0.036231   \n",
              "std                      0.109500                    0.205577                     0.186865   \n",
              "min                      0.000000                    0.000000                     0.000000   \n",
              "25%                      0.000000                    0.000000                     0.000000   \n",
              "50%                      0.000000                    0.000000                     0.000000   \n",
              "75%                      0.000000                    0.000000                     0.000000   \n",
              "max                      1.000000                    1.000000                     1.000000   \n",
              "\n",
              "       REG_CITY_NOT_LIVE_CITY  REG_CITY_NOT_WORK_CITY  LIVE_CITY_NOT_WORK_CITY   EXT_SOURCE_1  \\\n",
              "count           755182.000000           755182.000000            755182.000000  755182.000000   \n",
              "mean                 0.067034                0.212412                 0.169620       0.240759   \n",
              "std                  0.250081                0.409015                 0.375299       0.295193   \n",
              "min                  0.000000                0.000000                 0.000000       0.000000   \n",
              "25%                  0.000000                0.000000                 0.000000       0.000000   \n",
              "50%                  0.000000                0.000000                 0.000000       0.000000   \n",
              "75%                  0.000000                0.000000                 0.000000       0.504621   \n",
              "max                  1.000000                1.000000                 1.000000       0.962693   \n",
              "\n",
              "        EXT_SOURCE_2   EXT_SOURCE_3  APARTMENTS_AVG  BASEMENTAREA_AVG  \\\n",
              "count  755182.000000  755182.000000   755182.000000     755182.000000   \n",
              "mean        0.518962       0.455421        0.060649          0.038839   \n",
              "std         0.188805       0.220214        0.096995          0.069147   \n",
              "min         0.000000       0.000000        0.000000          0.000000   \n",
              "25%         0.405603       0.301625        0.000000          0.000000   \n",
              "50%         0.570757       0.484851        0.008200          0.000000   \n",
              "75%         0.664481       0.631355        0.092800          0.067800   \n",
              "max         0.855000       0.893976        1.000000          1.000000   \n",
              "\n",
              "       YEARS_BEGINEXPLUATATION_AVG  YEARS_BUILD_AVG  COMMONAREA_AVG  ELEVATORS_AVG  ENTRANCES_AVG  \\\n",
              "count                755182.000000    755182.000000   755182.000000  755182.000000  755182.000000   \n",
              "mean                      0.525318         0.266345        0.014088       0.038396       0.078682   \n",
              "std                       0.489461         0.366355        0.046368       0.101165       0.104428   \n",
              "min                       0.000000         0.000000        0.000000       0.000000       0.000000   \n",
              "25%                       0.000000         0.000000        0.000000       0.000000       0.000000   \n",
              "50%                       0.970700         0.000000        0.000000       0.000000       0.034500   \n",
              "75%                       0.982600         0.700800        0.006875       0.000000       0.137900   \n",
              "max                       1.000000         1.000000        1.000000       1.000000       1.000000   \n",
              "\n",
              "       FLOORSMAX_AVG  FLOORSMIN_AVG   LANDAREA_AVG  LIVINGAPARTMENTS_AVG  LIVINGAREA_AVG  \\\n",
              "count  755182.000000  755182.000000  755182.000000         755182.000000   755182.000000   \n",
              "mean        0.119260       0.077732       0.028778              0.033327        0.056448   \n",
              "std         0.152848       0.142651       0.061849              0.070980        0.096128   \n",
              "min         0.000000       0.000000       0.000000              0.000000        0.000000   \n",
              "25%         0.000000       0.000000       0.000000              0.000000        0.000000   \n",
              "50%         0.041700       0.000000       0.000000              0.000000        0.008000   \n",
              "75%         0.166700       0.125000       0.039000              0.050400        0.078100   \n",
              "max         1.000000       1.000000       1.000000              1.000000        1.000000   \n",
              "\n",
              "       NONLIVINGAPARTMENTS_AVG  NONLIVINGAREA_AVG  APARTMENTS_MODE  BASEMENTAREA_MODE  \\\n",
              "count            755182.000000      755182.000000    755182.000000      755182.000000   \n",
              "mean                  0.002812           0.013272         0.059064           0.038520   \n",
              "std                   0.027240           0.049659         0.095991           0.070068   \n",
              "min                   0.000000           0.000000         0.000000           0.000000   \n",
              "25%                   0.000000           0.000000         0.000000           0.000000   \n",
              "50%                   0.000000           0.000000         0.008400           0.000000   \n",
              "75%                   0.000000           0.002200         0.085100           0.066000   \n",
              "max                   1.000000           1.000000         1.000000           1.000000   \n",
              "\n",
              "       YEARS_BEGINEXPLUATATION_MODE  YEARS_BUILD_MODE  COMMONAREA_MODE  ELEVATORS_MODE  \\\n",
              "count                 755182.000000     755182.000000    755182.000000   755182.000000   \n",
              "mean                       0.524905          0.268927         0.013470        0.036265   \n",
              "std                        0.489525          0.369455         0.045258        0.099027   \n",
              "min                        0.000000          0.000000         0.000000        0.000000   \n",
              "25%                        0.000000          0.000000         0.000000        0.000000   \n",
              "50%                        0.970200          0.000000         0.000000        0.000000   \n",
              "75%                        0.982600          0.712500         0.005800        0.000000   \n",
              "max                        1.000000          1.000000         1.000000        1.000000   \n",
              "\n",
              "       ENTRANCES_MODE  FLOORSMAX_MODE  FLOORSMIN_MODE  LANDAREA_MODE  LIVINGAPARTMENTS_MODE  \\\n",
              "count   755182.000000   755182.000000   755182.000000  755182.000000          755182.000000   \n",
              "mean         0.076382        0.117210        0.076411       0.028244               0.034997   \n",
              "std          0.103351        0.150958        0.141116       0.062121               0.074808   \n",
              "min          0.000000        0.000000        0.000000       0.000000               0.000000   \n",
              "25%          0.000000        0.000000        0.000000       0.000000               0.000000   \n",
              "50%          0.034500        0.041700        0.000000       0.000000               0.000000   \n",
              "75%          0.137900        0.166700        0.083300       0.036800               0.054200   \n",
              "max          1.000000        1.000000        1.000000       1.000000               1.000000   \n",
              "\n",
              "       LIVINGAREA_MODE  NONLIVINGAPARTMENTS_MODE  NONLIVINGAREA_MODE  APARTMENTS_MEDI  \\\n",
              "count    755182.000000             755182.000000       755182.000000     755182.00000   \n",
              "mean          0.055783                  0.002627            0.012682          0.06082   \n",
              "std           0.096607                  0.026879            0.050173          0.09744   \n",
              "min           0.000000                  0.000000            0.000000          0.00000   \n",
              "25%           0.000000                  0.000000            0.000000          0.00000   \n",
              "50%           0.007700                  0.000000            0.000000          0.00830   \n",
              "75%           0.076600                  0.000000            0.000000          0.09260   \n",
              "max           1.000000                  1.000000            1.000000          1.00000   \n",
              "\n",
              "       BASEMENTAREA_MEDI  YEARS_BEGINEXPLUATATION_MEDI  YEARS_BUILD_MEDI  COMMONAREA_MEDI  \\\n",
              "count      755182.000000                 755182.000000     755182.000000    755182.000000   \n",
              "mean            0.038607                      0.525336          0.267491         0.014073   \n",
              "std             0.068858                      0.489524          0.367755         0.046454   \n",
              "min             0.000000                      0.000000          0.000000         0.000000   \n",
              "25%             0.000000                      0.000000          0.000000         0.000000   \n",
              "50%             0.000000                      0.970700          0.000000         0.000000   \n",
              "75%             0.067000                      0.982600          0.704800         0.006800   \n",
              "max             1.000000                      1.000000          1.000000         1.000000   \n",
              "\n",
              "       ELEVATORS_MEDI  ENTRANCES_MEDI  FLOORSMAX_MEDI  FLOORSMIN_MEDI  LANDAREA_MEDI  \\\n",
              "count   755182.000000   755182.000000   755182.000000   755182.000000  755182.000000   \n",
              "mean         0.037953        0.078391        0.119032        0.077601       0.029155   \n",
              "std          0.100834        0.104363        0.152875        0.142692       0.062712   \n",
              "min          0.000000        0.000000        0.000000        0.000000       0.000000   \n",
              "25%          0.000000        0.000000        0.000000        0.000000       0.000000   \n",
              "50%          0.000000        0.034500        0.041700        0.000000       0.000000   \n",
              "75%          0.000000        0.137900        0.166700        0.125000       0.039200   \n",
              "max          1.000000        1.000000        1.000000        1.000000       1.000000   \n",
              "\n",
              "       LIVINGAPARTMENTS_MEDI  LIVINGAREA_MEDI  NONLIVINGAPARTMENTS_MEDI  NONLIVINGAREA_MEDI  \\\n",
              "count          755182.000000    755182.000000             755182.000000       755182.000000   \n",
              "mean                0.033710         0.057016                  0.002767            0.013231   \n",
              "std                 0.071785         0.097300                  0.027193            0.050221   \n",
              "min                 0.000000         0.000000                  0.000000            0.000000   \n",
              "25%                 0.000000         0.000000                  0.000000            0.000000   \n",
              "50%                 0.000000         0.008100                  0.000000            0.000000   \n",
              "75%                 0.051300         0.078700                  0.000000            0.001300   \n",
              "max                 1.000000         1.000000                  1.000000            1.000000   \n",
              "\n",
              "       TOTALAREA_MODE  OBS_30_CNT_SOCIAL_CIRCLE  DEF_30_CNT_SOCIAL_CIRCLE  \\\n",
              "count   755182.000000             755182.000000             755182.000000   \n",
              "mean         0.055755                  1.457143                  0.145407   \n",
              "std          0.093650                  2.350537                  0.445971   \n",
              "min          0.000000                  0.000000                  0.000000   \n",
              "25%          0.000000                  0.000000                  0.000000   \n",
              "50%          0.010000                  0.000000                  0.000000   \n",
              "75%          0.073800                  2.000000                  0.000000   \n",
              "max          1.000000                 47.000000                  6.000000   \n",
              "\n",
              "       OBS_60_CNT_SOCIAL_CIRCLE  DEF_60_CNT_SOCIAL_CIRCLE  DAYS_LAST_PHONE_CHANGE  \\\n",
              "count             755182.000000             755182.000000           755182.000000   \n",
              "mean                   1.440922                  0.101289            -1057.301078   \n",
              "std                    2.331315                  0.363016              839.656694   \n",
              "min                    0.000000                  0.000000            -4128.000000   \n",
              "25%                    0.000000                  0.000000            -1684.000000   \n",
              "50%                    0.000000                  0.000000             -928.000000   \n",
              "75%                    2.000000                  0.000000             -329.250000   \n",
              "max                   47.000000                  5.000000                0.000000   \n",
              "\n",
              "       FLAG_DOCUMENT_2  FLAG_DOCUMENT_3  FLAG_DOCUMENT_4  FLAG_DOCUMENT_5  FLAG_DOCUMENT_6  \\\n",
              "count    755182.000000    755182.000000    755182.000000    755182.000000    755182.000000   \n",
              "mean          0.000005         0.724510         0.000062         0.015004         0.085059   \n",
              "std           0.002301         0.446761         0.007889         0.121570         0.278970   \n",
              "min           0.000000         0.000000         0.000000         0.000000         0.000000   \n",
              "25%           0.000000         0.000000         0.000000         0.000000         0.000000   \n",
              "50%           0.000000         1.000000         0.000000         0.000000         0.000000   \n",
              "75%           0.000000         1.000000         0.000000         0.000000         0.000000   \n",
              "max           1.000000         1.000000         1.000000         1.000000         1.000000   \n",
              "\n",
              "       FLAG_DOCUMENT_7  FLAG_DOCUMENT_8  FLAG_DOCUMENT_9  FLAG_DOCUMENT_10  FLAG_DOCUMENT_11  \\\n",
              "count    755182.000000    755182.000000    755182.000000     755182.000000     755182.000000   \n",
              "mean          0.000175         0.080121         0.003812          0.000021          0.002870   \n",
              "std           0.013220         0.271481         0.061626          0.004603          0.053491   \n",
              "min           0.000000         0.000000         0.000000          0.000000          0.000000   \n",
              "25%           0.000000         0.000000         0.000000          0.000000          0.000000   \n",
              "50%           0.000000         0.000000         0.000000          0.000000          0.000000   \n",
              "75%           0.000000         0.000000         0.000000          0.000000          0.000000   \n",
              "max           1.000000         1.000000         1.000000          1.000000          1.000000   \n",
              "\n",
              "       FLAG_DOCUMENT_12  FLAG_DOCUMENT_13  FLAG_DOCUMENT_14  FLAG_DOCUMENT_15  FLAG_DOCUMENT_16  \\\n",
              "count          755182.0     755182.000000     755182.000000     755182.000000     755182.000000   \n",
              "mean                0.0          0.003700          0.002782          0.001257          0.009520   \n",
              "std                 0.0          0.060713          0.052672          0.035427          0.097103   \n",
              "min                 0.0          0.000000          0.000000          0.000000          0.000000   \n",
              "25%                 0.0          0.000000          0.000000          0.000000          0.000000   \n",
              "50%                 0.0          0.000000          0.000000          0.000000          0.000000   \n",
              "75%                 0.0          0.000000          0.000000          0.000000          0.000000   \n",
              "max                 0.0          1.000000          1.000000          1.000000          1.000000   \n",
              "\n",
              "       FLAG_DOCUMENT_17  FLAG_DOCUMENT_18  FLAG_DOCUMENT_19  FLAG_DOCUMENT_20  FLAG_DOCUMENT_21  \\\n",
              "count     755182.000000     755182.000000     755182.000000     755182.000000     755182.000000   \n",
              "mean           0.000229          0.007568          0.000642          0.000780          0.000315   \n",
              "std            0.015134          0.086663          0.025334          0.027917          0.017750   \n",
              "min            0.000000          0.000000          0.000000          0.000000          0.000000   \n",
              "25%            0.000000          0.000000          0.000000          0.000000          0.000000   \n",
              "50%            0.000000          0.000000          0.000000          0.000000          0.000000   \n",
              "75%            0.000000          0.000000          0.000000          0.000000          0.000000   \n",
              "max            1.000000          1.000000          1.000000          1.000000          1.000000   \n",
              "\n",
              "       AMT_REQ_CREDIT_BUREAU_HOUR  AMT_REQ_CREDIT_BUREAU_DAY  AMT_REQ_CREDIT_BUREAU_WEEK  \\\n",
              "count               755182.000000              755182.000000               755182.000000   \n",
              "mean                     0.006575                   0.006876                    0.035226   \n",
              "std                      0.085328                   0.105361                    0.204439   \n",
              "min                      0.000000                   0.000000                    0.000000   \n",
              "25%                      0.000000                   0.000000                    0.000000   \n",
              "50%                      0.000000                   0.000000                    0.000000   \n",
              "75%                      0.000000                   0.000000                    0.000000   \n",
              "max                      4.000000                   9.000000                    8.000000   \n",
              "\n",
              "       AMT_REQ_CREDIT_BUREAU_MON  AMT_REQ_CREDIT_BUREAU_QRT  AMT_REQ_CREDIT_BUREAU_YEAR  \\\n",
              "count              755182.000000              755182.000000               755182.000000   \n",
              "mean                    0.358369                   0.263016                    1.899390   \n",
              "std                     1.096849                   0.807488                    1.871057   \n",
              "min                     0.000000                   0.000000                    0.000000   \n",
              "25%                     0.000000                   0.000000                    0.000000   \n",
              "50%                     0.000000                   0.000000                    1.000000   \n",
              "75%                     0.000000                   0.000000                    3.000000   \n",
              "max                    27.000000                 261.000000                   25.000000   \n",
              "\n",
              "       SK_ID_BUREAU    DAYS_CREDIT  CREDIT_DAY_OVERDUE  DAYS_CREDIT_ENDDATE  DAYS_ENDDATE_FACT  \\\n",
              "count  7.551820e+05  755182.000000       755182.000000        755182.000000      755182.000000   \n",
              "mean   5.718780e+06   -1108.295637            0.824268           448.983254        -622.420794   \n",
              "std    1.125176e+06     810.622426           36.395446          4731.796101         748.680127   \n",
              "min    0.000000e+00   -2922.000000            0.000000        -42042.000000       -3042.000000   \n",
              "25%    5.382557e+06   -1637.000000            0.000000         -1046.000000       -1054.000000   \n",
              "50%    5.827021e+06    -948.000000            0.000000          -195.000000        -308.000000   \n",
              "75%    6.349724e+06    -429.000000            0.000000           348.000000           0.000000   \n",
              "max    6.843457e+06       0.000000         2792.000000         31198.000000           0.000000   \n",
              "\n",
              "       AMT_CREDIT_MAX_OVERDUE  CNT_CREDIT_PROLONG  AMT_CREDIT_SUM  AMT_CREDIT_SUM_DEBT  \\\n",
              "count            7.551820e+05       755182.000000    7.551820e+05         7.551820e+05   \n",
              "mean             1.277385e+03            0.007029    3.429434e+05         1.116998e+05   \n",
              "std              4.626927e+04            0.100151    1.159422e+06         5.922378e+05   \n",
              "min              0.000000e+00            0.000000    0.000000e+00        -3.109511e+06   \n",
              "25%              0.000000e+00            0.000000    4.538619e+04         0.000000e+00   \n",
              "50%              0.000000e+00            0.000000    1.164892e+05         0.000000e+00   \n",
              "75%              0.000000e+00            0.000000    2.896020e+05         0.000000e+00   \n",
              "max              1.411139e+07            9.000000    3.960000e+08         6.457024e+07   \n",
              "\n",
              "       AMT_CREDIT_SUM_LIMIT  AMT_CREDIT_SUM_OVERDUE  DAYS_CREDIT_UPDATE  AMT_ANNUITY_y  \n",
              "count          7.551820e+05            7.551820e+05       755182.000000   7.551820e+05  \n",
              "mean           4.124575e+03            3.884561e+01         -580.714523   3.421093e+03  \n",
              "std            3.685876e+04            6.210658e+03          729.712457   1.275903e+05  \n",
              "min           -5.864061e+05            0.000000e+00       -41946.000000   0.000000e+00  \n",
              "25%            0.000000e+00            0.000000e+00         -882.000000   0.000000e+00  \n",
              "50%            0.000000e+00            0.000000e+00         -372.000000   0.000000e+00  \n",
              "75%            0.000000e+00            0.000000e+00          -29.000000   0.000000e+00  \n",
              "max            4.443255e+06            3.681063e+06          372.000000   5.958668e+07  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b39151f5-daa5-4951-b147-7c5e4a43f4d8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SK_ID_CURR</th>\n",
              "      <th>TARGET</th>\n",
              "      <th>NAME_CONTRACT_TYPE</th>\n",
              "      <th>CODE_GENDER</th>\n",
              "      <th>FLAG_OWN_CAR</th>\n",
              "      <th>FLAG_OWN_REALTY</th>\n",
              "      <th>CNT_CHILDREN</th>\n",
              "      <th>AMT_INCOME_TOTAL</th>\n",
              "      <th>AMT_CREDIT</th>\n",
              "      <th>AMT_ANNUITY_x</th>\n",
              "      <th>AMT_GOODS_PRICE</th>\n",
              "      <th>REGION_POPULATION_RELATIVE</th>\n",
              "      <th>DAYS_BIRTH</th>\n",
              "      <th>DAYS_EMPLOYED</th>\n",
              "      <th>DAYS_REGISTRATION</th>\n",
              "      <th>DAYS_ID_PUBLISH</th>\n",
              "      <th>OWN_CAR_AGE</th>\n",
              "      <th>FLAG_MOBIL</th>\n",
              "      <th>FLAG_EMP_PHONE</th>\n",
              "      <th>FLAG_WORK_PHONE</th>\n",
              "      <th>FLAG_CONT_MOBILE</th>\n",
              "      <th>FLAG_PHONE</th>\n",
              "      <th>FLAG_EMAIL</th>\n",
              "      <th>CNT_FAM_MEMBERS</th>\n",
              "      <th>REGION_RATING_CLIENT</th>\n",
              "      <th>REGION_RATING_CLIENT_W_CITY</th>\n",
              "      <th>HOUR_APPR_PROCESS_START</th>\n",
              "      <th>REG_REGION_NOT_LIVE_REGION</th>\n",
              "      <th>REG_REGION_NOT_WORK_REGION</th>\n",
              "      <th>LIVE_REGION_NOT_WORK_REGION</th>\n",
              "      <th>REG_CITY_NOT_LIVE_CITY</th>\n",
              "      <th>REG_CITY_NOT_WORK_CITY</th>\n",
              "      <th>LIVE_CITY_NOT_WORK_CITY</th>\n",
              "      <th>EXT_SOURCE_1</th>\n",
              "      <th>EXT_SOURCE_2</th>\n",
              "      <th>EXT_SOURCE_3</th>\n",
              "      <th>APARTMENTS_AVG</th>\n",
              "      <th>BASEMENTAREA_AVG</th>\n",
              "      <th>YEARS_BEGINEXPLUATATION_AVG</th>\n",
              "      <th>YEARS_BUILD_AVG</th>\n",
              "      <th>COMMONAREA_AVG</th>\n",
              "      <th>ELEVATORS_AVG</th>\n",
              "      <th>ENTRANCES_AVG</th>\n",
              "      <th>FLOORSMAX_AVG</th>\n",
              "      <th>FLOORSMIN_AVG</th>\n",
              "      <th>LANDAREA_AVG</th>\n",
              "      <th>LIVINGAPARTMENTS_AVG</th>\n",
              "      <th>LIVINGAREA_AVG</th>\n",
              "      <th>NONLIVINGAPARTMENTS_AVG</th>\n",
              "      <th>NONLIVINGAREA_AVG</th>\n",
              "      <th>APARTMENTS_MODE</th>\n",
              "      <th>BASEMENTAREA_MODE</th>\n",
              "      <th>YEARS_BEGINEXPLUATATION_MODE</th>\n",
              "      <th>YEARS_BUILD_MODE</th>\n",
              "      <th>COMMONAREA_MODE</th>\n",
              "      <th>ELEVATORS_MODE</th>\n",
              "      <th>ENTRANCES_MODE</th>\n",
              "      <th>FLOORSMAX_MODE</th>\n",
              "      <th>FLOORSMIN_MODE</th>\n",
              "      <th>LANDAREA_MODE</th>\n",
              "      <th>LIVINGAPARTMENTS_MODE</th>\n",
              "      <th>LIVINGAREA_MODE</th>\n",
              "      <th>NONLIVINGAPARTMENTS_MODE</th>\n",
              "      <th>NONLIVINGAREA_MODE</th>\n",
              "      <th>APARTMENTS_MEDI</th>\n",
              "      <th>BASEMENTAREA_MEDI</th>\n",
              "      <th>YEARS_BEGINEXPLUATATION_MEDI</th>\n",
              "      <th>YEARS_BUILD_MEDI</th>\n",
              "      <th>COMMONAREA_MEDI</th>\n",
              "      <th>ELEVATORS_MEDI</th>\n",
              "      <th>ENTRANCES_MEDI</th>\n",
              "      <th>FLOORSMAX_MEDI</th>\n",
              "      <th>FLOORSMIN_MEDI</th>\n",
              "      <th>LANDAREA_MEDI</th>\n",
              "      <th>LIVINGAPARTMENTS_MEDI</th>\n",
              "      <th>LIVINGAREA_MEDI</th>\n",
              "      <th>NONLIVINGAPARTMENTS_MEDI</th>\n",
              "      <th>NONLIVINGAREA_MEDI</th>\n",
              "      <th>TOTALAREA_MODE</th>\n",
              "      <th>OBS_30_CNT_SOCIAL_CIRCLE</th>\n",
              "      <th>DEF_30_CNT_SOCIAL_CIRCLE</th>\n",
              "      <th>OBS_60_CNT_SOCIAL_CIRCLE</th>\n",
              "      <th>DEF_60_CNT_SOCIAL_CIRCLE</th>\n",
              "      <th>DAYS_LAST_PHONE_CHANGE</th>\n",
              "      <th>FLAG_DOCUMENT_2</th>\n",
              "      <th>FLAG_DOCUMENT_3</th>\n",
              "      <th>FLAG_DOCUMENT_4</th>\n",
              "      <th>FLAG_DOCUMENT_5</th>\n",
              "      <th>FLAG_DOCUMENT_6</th>\n",
              "      <th>FLAG_DOCUMENT_7</th>\n",
              "      <th>FLAG_DOCUMENT_8</th>\n",
              "      <th>FLAG_DOCUMENT_9</th>\n",
              "      <th>FLAG_DOCUMENT_10</th>\n",
              "      <th>FLAG_DOCUMENT_11</th>\n",
              "      <th>FLAG_DOCUMENT_12</th>\n",
              "      <th>FLAG_DOCUMENT_13</th>\n",
              "      <th>FLAG_DOCUMENT_14</th>\n",
              "      <th>FLAG_DOCUMENT_15</th>\n",
              "      <th>FLAG_DOCUMENT_16</th>\n",
              "      <th>FLAG_DOCUMENT_17</th>\n",
              "      <th>FLAG_DOCUMENT_18</th>\n",
              "      <th>FLAG_DOCUMENT_19</th>\n",
              "      <th>FLAG_DOCUMENT_20</th>\n",
              "      <th>FLAG_DOCUMENT_21</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_HOUR</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_DAY</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_WEEK</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_MON</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_QRT</th>\n",
              "      <th>AMT_REQ_CREDIT_BUREAU_YEAR</th>\n",
              "      <th>SK_ID_BUREAU</th>\n",
              "      <th>DAYS_CREDIT</th>\n",
              "      <th>CREDIT_DAY_OVERDUE</th>\n",
              "      <th>DAYS_CREDIT_ENDDATE</th>\n",
              "      <th>DAYS_ENDDATE_FACT</th>\n",
              "      <th>AMT_CREDIT_MAX_OVERDUE</th>\n",
              "      <th>CNT_CREDIT_PROLONG</th>\n",
              "      <th>AMT_CREDIT_SUM</th>\n",
              "      <th>AMT_CREDIT_SUM_DEBT</th>\n",
              "      <th>AMT_CREDIT_SUM_LIMIT</th>\n",
              "      <th>AMT_CREDIT_SUM_OVERDUE</th>\n",
              "      <th>DAYS_CREDIT_UPDATE</th>\n",
              "      <th>AMT_ANNUITY_y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>7.551820e+05</td>\n",
              "      <td>7.551820e+05</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>7.551820e+05</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.0</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.00000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.0</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>7.551820e+05</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>7.551820e+05</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>7.551820e+05</td>\n",
              "      <td>7.551820e+05</td>\n",
              "      <td>7.551820e+05</td>\n",
              "      <td>7.551820e+05</td>\n",
              "      <td>755182.000000</td>\n",
              "      <td>7.551820e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>278150.694332</td>\n",
              "      <td>0.078794</td>\n",
              "      <td>0.087473</td>\n",
              "      <td>0.319506</td>\n",
              "      <td>0.359986</td>\n",
              "      <td>0.695456</td>\n",
              "      <td>0.426571</td>\n",
              "      <td>1.803473e+05</td>\n",
              "      <td>6.203523e+05</td>\n",
              "      <td>27372.661068</td>\n",
              "      <td>5.586452e+05</td>\n",
              "      <td>0.020372</td>\n",
              "      <td>-16276.529247</td>\n",
              "      <td>61672.284102</td>\n",
              "      <td>-4950.633514</td>\n",
              "      <td>-3136.577662</td>\n",
              "      <td>4.291735</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.825010</td>\n",
              "      <td>0.200677</td>\n",
              "      <td>0.998256</td>\n",
              "      <td>0.301376</td>\n",
              "      <td>0.063322</td>\n",
              "      <td>2.177315</td>\n",
              "      <td>2.075196</td>\n",
              "      <td>2.055363</td>\n",
              "      <td>12.038522</td>\n",
              "      <td>0.012137</td>\n",
              "      <td>0.044217</td>\n",
              "      <td>0.036231</td>\n",
              "      <td>0.067034</td>\n",
              "      <td>0.212412</td>\n",
              "      <td>0.169620</td>\n",
              "      <td>0.240759</td>\n",
              "      <td>0.518962</td>\n",
              "      <td>0.455421</td>\n",
              "      <td>0.060649</td>\n",
              "      <td>0.038839</td>\n",
              "      <td>0.525318</td>\n",
              "      <td>0.266345</td>\n",
              "      <td>0.014088</td>\n",
              "      <td>0.038396</td>\n",
              "      <td>0.078682</td>\n",
              "      <td>0.119260</td>\n",
              "      <td>0.077732</td>\n",
              "      <td>0.028778</td>\n",
              "      <td>0.033327</td>\n",
              "      <td>0.056448</td>\n",
              "      <td>0.002812</td>\n",
              "      <td>0.013272</td>\n",
              "      <td>0.059064</td>\n",
              "      <td>0.038520</td>\n",
              "      <td>0.524905</td>\n",
              "      <td>0.268927</td>\n",
              "      <td>0.013470</td>\n",
              "      <td>0.036265</td>\n",
              "      <td>0.076382</td>\n",
              "      <td>0.117210</td>\n",
              "      <td>0.076411</td>\n",
              "      <td>0.028244</td>\n",
              "      <td>0.034997</td>\n",
              "      <td>0.055783</td>\n",
              "      <td>0.002627</td>\n",
              "      <td>0.012682</td>\n",
              "      <td>0.06082</td>\n",
              "      <td>0.038607</td>\n",
              "      <td>0.525336</td>\n",
              "      <td>0.267491</td>\n",
              "      <td>0.014073</td>\n",
              "      <td>0.037953</td>\n",
              "      <td>0.078391</td>\n",
              "      <td>0.119032</td>\n",
              "      <td>0.077601</td>\n",
              "      <td>0.029155</td>\n",
              "      <td>0.033710</td>\n",
              "      <td>0.057016</td>\n",
              "      <td>0.002767</td>\n",
              "      <td>0.013231</td>\n",
              "      <td>0.055755</td>\n",
              "      <td>1.457143</td>\n",
              "      <td>0.145407</td>\n",
              "      <td>1.440922</td>\n",
              "      <td>0.101289</td>\n",
              "      <td>-1057.301078</td>\n",
              "      <td>0.000005</td>\n",
              "      <td>0.724510</td>\n",
              "      <td>0.000062</td>\n",
              "      <td>0.015004</td>\n",
              "      <td>0.085059</td>\n",
              "      <td>0.000175</td>\n",
              "      <td>0.080121</td>\n",
              "      <td>0.003812</td>\n",
              "      <td>0.000021</td>\n",
              "      <td>0.002870</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.003700</td>\n",
              "      <td>0.002782</td>\n",
              "      <td>0.001257</td>\n",
              "      <td>0.009520</td>\n",
              "      <td>0.000229</td>\n",
              "      <td>0.007568</td>\n",
              "      <td>0.000642</td>\n",
              "      <td>0.000780</td>\n",
              "      <td>0.000315</td>\n",
              "      <td>0.006575</td>\n",
              "      <td>0.006876</td>\n",
              "      <td>0.035226</td>\n",
              "      <td>0.358369</td>\n",
              "      <td>0.263016</td>\n",
              "      <td>1.899390</td>\n",
              "      <td>5.718780e+06</td>\n",
              "      <td>-1108.295637</td>\n",
              "      <td>0.824268</td>\n",
              "      <td>448.983254</td>\n",
              "      <td>-622.420794</td>\n",
              "      <td>1.277385e+03</td>\n",
              "      <td>0.007029</td>\n",
              "      <td>3.429434e+05</td>\n",
              "      <td>1.116998e+05</td>\n",
              "      <td>4.124575e+03</td>\n",
              "      <td>3.884561e+01</td>\n",
              "      <td>-580.714523</td>\n",
              "      <td>3.421093e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>102843.790629</td>\n",
              "      <td>0.269418</td>\n",
              "      <td>0.282527</td>\n",
              "      <td>0.466285</td>\n",
              "      <td>0.479996</td>\n",
              "      <td>0.460214</td>\n",
              "      <td>0.726381</td>\n",
              "      <td>2.943765e+05</td>\n",
              "      <td>4.083272e+05</td>\n",
              "      <td>14253.934702</td>\n",
              "      <td>3.757229e+05</td>\n",
              "      <td>0.013243</td>\n",
              "      <td>4184.679939</td>\n",
              "      <td>139790.617016</td>\n",
              "      <td>3503.434351</td>\n",
              "      <td>1468.176801</td>\n",
              "      <td>9.408946</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.379958</td>\n",
              "      <td>0.400507</td>\n",
              "      <td>0.041724</td>\n",
              "      <td>0.458856</td>\n",
              "      <td>0.243542</td>\n",
              "      <td>0.906289</td>\n",
              "      <td>0.499602</td>\n",
              "      <td>0.494808</td>\n",
              "      <td>3.274080</td>\n",
              "      <td>0.109500</td>\n",
              "      <td>0.205577</td>\n",
              "      <td>0.186865</td>\n",
              "      <td>0.250081</td>\n",
              "      <td>0.409015</td>\n",
              "      <td>0.375299</td>\n",
              "      <td>0.295193</td>\n",
              "      <td>0.188805</td>\n",
              "      <td>0.220214</td>\n",
              "      <td>0.096995</td>\n",
              "      <td>0.069147</td>\n",
              "      <td>0.489461</td>\n",
              "      <td>0.366355</td>\n",
              "      <td>0.046368</td>\n",
              "      <td>0.101165</td>\n",
              "      <td>0.104428</td>\n",
              "      <td>0.152848</td>\n",
              "      <td>0.142651</td>\n",
              "      <td>0.061849</td>\n",
              "      <td>0.070980</td>\n",
              "      <td>0.096128</td>\n",
              "      <td>0.027240</td>\n",
              "      <td>0.049659</td>\n",
              "      <td>0.095991</td>\n",
              "      <td>0.070068</td>\n",
              "      <td>0.489525</td>\n",
              "      <td>0.369455</td>\n",
              "      <td>0.045258</td>\n",
              "      <td>0.099027</td>\n",
              "      <td>0.103351</td>\n",
              "      <td>0.150958</td>\n",
              "      <td>0.141116</td>\n",
              "      <td>0.062121</td>\n",
              "      <td>0.074808</td>\n",
              "      <td>0.096607</td>\n",
              "      <td>0.026879</td>\n",
              "      <td>0.050173</td>\n",
              "      <td>0.09744</td>\n",
              "      <td>0.068858</td>\n",
              "      <td>0.489524</td>\n",
              "      <td>0.367755</td>\n",
              "      <td>0.046454</td>\n",
              "      <td>0.100834</td>\n",
              "      <td>0.104363</td>\n",
              "      <td>0.152875</td>\n",
              "      <td>0.142692</td>\n",
              "      <td>0.062712</td>\n",
              "      <td>0.071785</td>\n",
              "      <td>0.097300</td>\n",
              "      <td>0.027193</td>\n",
              "      <td>0.050221</td>\n",
              "      <td>0.093650</td>\n",
              "      <td>2.350537</td>\n",
              "      <td>0.445971</td>\n",
              "      <td>2.331315</td>\n",
              "      <td>0.363016</td>\n",
              "      <td>839.656694</td>\n",
              "      <td>0.002301</td>\n",
              "      <td>0.446761</td>\n",
              "      <td>0.007889</td>\n",
              "      <td>0.121570</td>\n",
              "      <td>0.278970</td>\n",
              "      <td>0.013220</td>\n",
              "      <td>0.271481</td>\n",
              "      <td>0.061626</td>\n",
              "      <td>0.004603</td>\n",
              "      <td>0.053491</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.060713</td>\n",
              "      <td>0.052672</td>\n",
              "      <td>0.035427</td>\n",
              "      <td>0.097103</td>\n",
              "      <td>0.015134</td>\n",
              "      <td>0.086663</td>\n",
              "      <td>0.025334</td>\n",
              "      <td>0.027917</td>\n",
              "      <td>0.017750</td>\n",
              "      <td>0.085328</td>\n",
              "      <td>0.105361</td>\n",
              "      <td>0.204439</td>\n",
              "      <td>1.096849</td>\n",
              "      <td>0.807488</td>\n",
              "      <td>1.871057</td>\n",
              "      <td>1.125176e+06</td>\n",
              "      <td>810.622426</td>\n",
              "      <td>36.395446</td>\n",
              "      <td>4731.796101</td>\n",
              "      <td>748.680127</td>\n",
              "      <td>4.626927e+04</td>\n",
              "      <td>0.100151</td>\n",
              "      <td>1.159422e+06</td>\n",
              "      <td>5.922378e+05</td>\n",
              "      <td>3.685876e+04</td>\n",
              "      <td>6.210658e+03</td>\n",
              "      <td>729.712457</td>\n",
              "      <td>1.275903e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>100004.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.565000e+04</td>\n",
              "      <td>4.500000e+04</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000290</td>\n",
              "      <td>-25201.000000</td>\n",
              "      <td>-17583.000000</td>\n",
              "      <td>-24672.000000</td>\n",
              "      <td>-6383.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-4128.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>-2922.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-42042.000000</td>\n",
              "      <td>-3042.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>-3.109511e+06</td>\n",
              "      <td>-5.864061e+05</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>-41946.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>188680.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.125000e+05</td>\n",
              "      <td>2.842560e+05</td>\n",
              "      <td>16875.000000</td>\n",
              "      <td>2.475000e+05</td>\n",
              "      <td>0.010006</td>\n",
              "      <td>-19777.000000</td>\n",
              "      <td>-3147.000000</td>\n",
              "      <td>-7417.000000</td>\n",
              "      <td>-4355.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.405603</td>\n",
              "      <td>0.301625</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-1684.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>5.382557e+06</td>\n",
              "      <td>-1637.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-1046.000000</td>\n",
              "      <td>-1054.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>4.538619e+04</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>-882.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>278195.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.575000e+05</td>\n",
              "      <td>5.342040e+05</td>\n",
              "      <td>25317.000000</td>\n",
              "      <td>4.545000e+05</td>\n",
              "      <td>0.018801</td>\n",
              "      <td>-15917.000000</td>\n",
              "      <td>-1461.000000</td>\n",
              "      <td>-4475.000000</td>\n",
              "      <td>-3464.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.570757</td>\n",
              "      <td>0.484851</td>\n",
              "      <td>0.008200</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.970700</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.034500</td>\n",
              "      <td>0.041700</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.008000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.008400</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.970200</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.034500</td>\n",
              "      <td>0.041700</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.007700</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00830</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.970700</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.034500</td>\n",
              "      <td>0.041700</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.008100</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.010000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-928.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>5.827021e+06</td>\n",
              "      <td>-948.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-195.000000</td>\n",
              "      <td>-308.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.164892e+05</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>-372.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>367007.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.250000e+05</td>\n",
              "      <td>8.353800e+05</td>\n",
              "      <td>35028.000000</td>\n",
              "      <td>7.020000e+05</td>\n",
              "      <td>0.026392</td>\n",
              "      <td>-12866.000000</td>\n",
              "      <td>-356.000000</td>\n",
              "      <td>-1980.000000</td>\n",
              "      <td>-1972.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>14.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.504621</td>\n",
              "      <td>0.664481</td>\n",
              "      <td>0.631355</td>\n",
              "      <td>0.092800</td>\n",
              "      <td>0.067800</td>\n",
              "      <td>0.982600</td>\n",
              "      <td>0.700800</td>\n",
              "      <td>0.006875</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.137900</td>\n",
              "      <td>0.166700</td>\n",
              "      <td>0.125000</td>\n",
              "      <td>0.039000</td>\n",
              "      <td>0.050400</td>\n",
              "      <td>0.078100</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.002200</td>\n",
              "      <td>0.085100</td>\n",
              "      <td>0.066000</td>\n",
              "      <td>0.982600</td>\n",
              "      <td>0.712500</td>\n",
              "      <td>0.005800</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.137900</td>\n",
              "      <td>0.166700</td>\n",
              "      <td>0.083300</td>\n",
              "      <td>0.036800</td>\n",
              "      <td>0.054200</td>\n",
              "      <td>0.076600</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.09260</td>\n",
              "      <td>0.067000</td>\n",
              "      <td>0.982600</td>\n",
              "      <td>0.704800</td>\n",
              "      <td>0.006800</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.137900</td>\n",
              "      <td>0.166700</td>\n",
              "      <td>0.125000</td>\n",
              "      <td>0.039200</td>\n",
              "      <td>0.051300</td>\n",
              "      <td>0.078700</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.001300</td>\n",
              "      <td>0.073800</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-329.250000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>6.349724e+06</td>\n",
              "      <td>-429.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>348.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.896020e+05</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>-29.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>456255.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>1.170000e+08</td>\n",
              "      <td>4.050000e+06</td>\n",
              "      <td>230161.500000</td>\n",
              "      <td>4.050000e+06</td>\n",
              "      <td>0.072508</td>\n",
              "      <td>-7678.000000</td>\n",
              "      <td>365243.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>91.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>23.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.962693</td>\n",
              "      <td>0.855000</td>\n",
              "      <td>0.893976</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>47.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>47.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>27.000000</td>\n",
              "      <td>261.000000</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>6.843457e+06</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2792.000000</td>\n",
              "      <td>31198.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.411139e+07</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>3.960000e+08</td>\n",
              "      <td>6.457024e+07</td>\n",
              "      <td>4.443255e+06</td>\n",
              "      <td>3.681063e+06</td>\n",
              "      <td>372.000000</td>\n",
              "      <td>5.958668e+07</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b39151f5-daa5-4951-b147-7c5e4a43f4d8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b39151f5-daa5-4951-b147-7c5e4a43f4d8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b39151f5-daa5-4951-b147-7c5e4a43f4d8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-34865a00-0742-40e8-abee-f395397af6ba\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34865a00-0742-40e8-abee-f395397af6ba')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-34865a00-0742-40e8-abee-f395397af6ba button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "name": "Welcome To Colab",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}